#include <codegen/il2cpp-codegen-metadata.h>
#include "vm/ClassInlines.h"
#include "vm/Object.h"
#include "vm/Class.h"

#include "../metadata/MetadataModule.h"
#include "../metadata/MetadataUtil.h"

#include "../interpreter/MethodBridge.h"
#include "../interpreter/Interpreter.h"
#include "../interpreter/MemoryUtil.h"
#include "../interpreter/InstrinctDef.h"

using namespace hybridclr::interpreter;

//!!!{{CODE
// System.Collections.Generic.KeyValuePair`2<System.Object,System.Int32>
struct __struct_0__ {
	uintptr_t __0; // key
	int32_t __1; // value
};
// System.Guid
struct __struct_1__ {
	int32_t __0; // _a
	int16_t __1; // _b
	int16_t __2; // _c
	uint8_t __3; // _d
	uint8_t __4; // _e
	uint8_t __5; // _f
	uint8_t __6; // _g
	uint8_t __7; // _h
	uint8_t __8; // _i
	uint8_t __9; // _j
	uint8_t __10; // _k
};
// System.Collections.Generic.KeyValuePair`2<System.Guid,System.Int32>
struct __struct_2__ {
	__struct_1__ __0; // key
	int32_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Guid,System.Object>
struct __struct_3__ {
	__struct_1__ __0; // key
	uintptr_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>
struct __struct_4__ {
	uintptr_t __0; // key
	uintptr_t __1; // value
};
// UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord
struct __struct_5__ {
	int32_t __0; // tileX
	int32_t __1; // tileZ
};
// System.Collections.Generic.KeyValuePair`2<System.Int32,System.Object>
struct __struct_7__ {
	int32_t __0; // key
	uintptr_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Object,System.Resources.ResourceLocator>
struct __struct_8__ {
	uintptr_t __0; // key
	__struct_0__ __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.UInt64,System.Object>
struct __struct_9__ {
	uint64_t __0; // key
	uintptr_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord,System.Object>
struct __struct_10__ {
	__struct_5__ __0; // key
	uintptr_t __1; // value
};
// System.Nullable`1<System.Object>
struct __struct_13__ {
	uintptr_t __0; // value
	uint8_t __1; // has_value
};
// UnityEngine.UnitySynchronizationContext/WorkRequest
struct __struct_15__ {
	uintptr_t __0; // m_DelagateCallback
	uintptr_t __1; // m_DelagateState
	uintptr_t __2; // m_WaitHandle
};
// System.ConsoleKeyInfo
struct __struct_18__ {
	uint16_t __0; // _keyChar
	int32_t __1; // _key
	int32_t __2; // _mods
};
// System.Decimal
struct __struct_19__ {
	int32_t __0; // flags
	int32_t __1; // hi
	int32_t __2; // lo
	int32_t __3; // mid
};
// System.DateTime
struct __struct_20__ {
	uint64_t __0; // dateData
};
// System.DateTimeOffset
struct __struct_21__ {
	__struct_20__ __0; // m_dateTime
	int16_t __1; // m_offsetMinutes
};
// System.Diagnostics.Tracing.EventDescriptor
union __struct_22__ {
	struct { char __fieldSize_offsetPadding[16];};
	#pragma pack(push, 1)
	struct {   int32_t __0;}; // m_traceloggingId
	#pragma pack(pop)
	struct { int32_t __0_forAlignmentOnly;}; // m_traceloggingId
	#pragma pack(push, 1)
	struct {   uint16_t __1;}; // m_id
	#pragma pack(pop)
	struct { uint16_t __1_forAlignmentOnly;}; // m_id
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[2];  uint8_t __2;}; // m_version
	#pragma pack(pop)
	struct { uint8_t __2_forAlignmentOnly;}; // m_version
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[3];  uint8_t __3;}; // m_channel
	#pragma pack(pop)
	struct { uint8_t __3_forAlignmentOnly;}; // m_channel
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[4];  uint8_t __4;}; // m_level
	#pragma pack(pop)
	struct { uint8_t __4_forAlignmentOnly;}; // m_level
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[5];  uint8_t __5;}; // m_opcode
	#pragma pack(pop)
	struct { uint8_t __5_forAlignmentOnly;}; // m_opcode
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[6];  uint16_t __6;}; // m_task
	#pragma pack(pop)
	struct { uint16_t __6_forAlignmentOnly;}; // m_task
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[8];  int64_t __7;}; // m_keywords
	#pragma pack(pop)
	struct { int64_t __7_forAlignmentOnly;}; // m_keywords
};
// System.Diagnostics.Tracing.SessionMask
struct __struct_23__ {
	uint32_t __0; // m_mask
};
// System.TimeSpan
struct __struct_25__ {
	int64_t __0; // _ticks
};
// System.TimeZoneInfo/TransitionTime
struct __struct_26__ {
	__struct_20__ __0; // m_timeOfDay
	uint8_t __1; // m_month
	uint8_t __2; // m_week
	uint8_t __3; // m_day
	int32_t __4; // m_dayOfWeek
	uint8_t __5; // m_isFixedDateRule
};
// Unity.Collections.NativeArray`1<System.Object>
struct __struct_27__ {
	uintptr_t __0; // m_Buffer
	int32_t __1; // m_Length
	int32_t __2; // m_AllocatorLabel
};
// UnityEngine.Vector3
struct __struct_61__ {
	float __0; // x
	float __1; // y
	float __2; // z
};
// UnityEngine.Bounds
struct __struct_39__ {
	__struct_61__ __0; // m_Center
	__struct_61__ __1; // m_Extents
};
// UnityEngine.Color
struct __struct_40__ {
	float __0; // r
	float __1; // g
	float __2; // b
	float __3; // a
};
// UnityEngine.Matrix4x4
struct __struct_45__ {
	float __0; // m00
	float __1; // m10
	float __2; // m20
	float __3; // m30
	float __4; // m01
	float __5; // m11
	float __6; // m21
	float __7; // m31
	float __8; // m02
	float __9; // m12
	float __10; // m22
	float __11; // m32
	float __12; // m03
	float __13; // m13
	float __14; // m23
	float __15; // m33
};
// UnityEngine.PhysicsScene2D
struct __struct_46__ {
	int32_t __0; // m_Handle
};
// UnityEngine.Playables.PlayableHandle
struct __struct_48__ {
	intptr_t __0; // m_Handle
	uint32_t __1; // m_Version
};
// UnityEngine.Rendering.LODParameters
struct __struct_55__ {
	int32_t __0; // m_IsOrthographic
	__struct_61__ __1; // m_CameraPosition
	float __2; // m_FieldOfView
	float __3; // m_OrthoSize
	int32_t __4; // m_CameraPixelHeight
};
// UnityEngine.Rendering.RenderTargetIdentifier
struct __struct_56__ {
	int32_t __0; // m_Type
	int32_t __1; // m_NameID
	int32_t __2; // m_InstanceID
	intptr_t __3; // m_BufferPointer
	int32_t __4; // m_MipLevel
	int32_t __5; // m_CubeFace
	int32_t __6; // m_DepthSlice
};
// UnityEngine.Rendering.ScriptableRenderContext
struct __struct_57__ {
	intptr_t __0; // m_Ptr
};
// UnityEngine.Vector2
struct __struct_59__ {
	float __0; // x
	float __1; // y
};
// UnityEngine.Vector3Int
struct __struct_60__ {
	int32_t __0; // m_X
	int32_t __1; // m_Y
	int32_t __2; // m_Z
};
// UnityEngine.XR.Bone
struct __struct_63__ {
	uint64_t __0; // m_DeviceId
	uint32_t __1; // m_FeatureIndex
};
// UnityEngine.XR.InputDevice
struct __struct_66__ {
	uint64_t __0; // m_DeviceId
	uint8_t __1; // m_Initialized
};
// UnityEngine.XR.InputFeatureUsage
struct __struct_67__ {
	uintptr_t __0; // m_Name
	uint32_t __1; // m_InternalType
};
// UnityEngine.XR.MeshId
struct __struct_69__ {
	uint64_t __0; // m_SubId1
	uint64_t __1; // m_SubId2
};
// UnityEngine.XR.MeshGenerationResult
struct __struct_68__ {
	__struct_69__ __0; // <MeshId>k__BackingField
	uintptr_t __1; // <Mesh>k__BackingField
	uintptr_t __2; // <MeshCollider>k__BackingField
	int32_t __3; // <Status>k__BackingField
	int32_t __4; // <Attributes>k__BackingField
};
// System.Nullable`1<System.Byte>
struct __struct_70__ {
	uint8_t __0; // value
	uint8_t __1; // has_value
};
// System.Nullable`1<System.Int32>
struct __struct_71__ {
	int32_t __0; // value
	uint8_t __1; // has_value
};
// System.Threading.CancellationToken
struct __struct_73__ {
	uintptr_t __0; // m_source
};
// System.Threading.Tasks.VoidTaskResult
union __struct_74__ {
	struct { char __fieldSize_offsetPadding[1];};
	struct {
	};
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,System.Object>
struct __struct_79__ {
	uintptr_t __0; // dictionary
	int32_t __1; // version
	int32_t __2; // index
	__struct_7__ __3; // current
	int32_t __4; // getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Int32>
struct __struct_80__ {
	uintptr_t __0; // dictionary
	int32_t __1; // version
	int32_t __2; // index
	__struct_0__ __3; // current
	int32_t __4; // getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>
struct __struct_81__ {
	uintptr_t __0; // dictionary
	int32_t __1; // version
	int32_t __2; // index
	__struct_4__ __3; // current
	int32_t __4; // getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Resources.ResourceLocator>
struct __struct_82__ {
	uintptr_t __0; // dictionary
	int32_t __1; // version
	int32_t __2; // index
	__struct_8__ __3; // current
	int32_t __4; // getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.UInt64,System.Object>
struct __struct_83__ {
	uintptr_t __0; // dictionary
	int32_t __1; // version
	int32_t __2; // index
	__struct_9__ __3; // current
	int32_t __4; // getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord,System.Object>
struct __struct_84__ {
	uintptr_t __0; // dictionary
	int32_t __1; // version
	int32_t __2; // index
	__struct_10__ __3; // current
	int32_t __4; // getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.Int32,System.Object>
struct __struct_85__ {
	uintptr_t __0; // dictionary
	int32_t __1; // index
	int32_t __2; // version
	int32_t __3; // currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.Object,System.Int32>
struct __struct_86__ {
	uintptr_t __0; // dictionary
	int32_t __1; // index
	int32_t __2; // version
	uintptr_t __3; // currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.UInt64,System.Object>
struct __struct_89__ {
	uintptr_t __0; // dictionary
	int32_t __1; // index
	int32_t __2; // version
	uint64_t __3; // currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord,System.Object>
struct __struct_90__ {
	uintptr_t __0; // dictionary
	int32_t __1; // index
	int32_t __2; // version
	__struct_5__ __3; // currentKey
};
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.Object,System.Resources.ResourceLocator>
struct __struct_94__ {
	uintptr_t __0; // dictionary
	int32_t __1; // index
	int32_t __2; // version
	__struct_0__ __3; // currentValue
};
// System.Collections.Generic.LinkedList`1/Enumerator<System.Object>
struct __struct_97__ {
	uintptr_t __0; // _list
	uintptr_t __1; // _node
	int32_t __2; // _version
	uintptr_t __3; // _current
	int32_t __4; // _index
};
// System.Collections.Generic.List`1/Enumerator<System.Byte>
struct __struct_98__ {
	uintptr_t __0; // list
	int32_t __1; // index
	int32_t __2; // version
	uint8_t __3; // current
};
// System.Collections.Generic.List`1/Enumerator<System.Collections.Generic.KeyValuePair`2<System.DateTime,System.Object>>
struct __struct_99__ {
	uintptr_t __0; // list
	int32_t __1; // index
	int32_t __2; // version
	__struct_9__ __3; // current
};
// System.Collections.Generic.List`1/Enumerator<UnityEngine.BeforeRenderHelper/OrderBlock>
struct __struct_104__ {
	uintptr_t __0; // list
	int32_t __1; // index
	int32_t __2; // version
	__struct_7__ __3; // current
};
// System.Collections.Generic.List`1/Enumerator<UnityEngine.UnitySynchronizationContext/WorkRequest>
struct __struct_105__ {
	uintptr_t __0; // list
	int32_t __1; // index
	int32_t __2; // version
	__struct_15__ __3; // current
};
// System.Threading.AsyncLocalValueChangedArgs`1<System.Object>
struct __struct_106__ {
	uintptr_t __0; // <PreviousValue>k__BackingField
	uintptr_t __1; // <CurrentValue>k__BackingField
	uint8_t __2; // <ThreadContextChanged>k__BackingField
};
// UnityEngine.XR.XRNodeState
struct __struct_108__ {
	int32_t __0; // m_Type
	int32_t __1; // m_AvailableFields
	__struct_61__ __2; // m_Position
	__struct_40__ __3; // m_Rotation
	__struct_61__ __4; // m_Velocity
	__struct_61__ __5; // m_AngularVelocity
	__struct_61__ __6; // m_Acceleration
	__struct_61__ __7; // m_AngularAcceleration
	int32_t __8; // m_Tracked
	uint64_t __9; // m_UniqueID
};
// UnityEngine.Profiling.Experimental.DebugScreenCapture
struct __struct_109__ {
	__struct_27__ __0; // <rawImageDataReference>k__BackingField
	int32_t __1; // <imageFormat>k__BackingField
	int32_t __2; // <width>k__BackingField
	int32_t __3; // <height>k__BackingField
};
// System.Diagnostics.Tracing.EmptyStruct
union __struct_110__ {
	struct { char __fieldSize_offsetPadding[1];};
	struct {
	};
};
// UnityEngine.CullingGroupEvent
struct __struct_112__ {
	int32_t __0; // m_Index
	uint8_t __1; // m_PrevState
	uint8_t __2; // m_ThisState
};
// UnityEngine.Rendering.BatchCullingContext
struct __struct_115__ {
	__struct_27__ __0; // cullingPlanes
	__struct_27__ __1; // batchVisibility
	__struct_27__ __2; // visibleIndices
	__struct_27__ __3; // visibleIndicesY
	__struct_55__ __4; // lodParameters
	__struct_45__ __5; // cullingMatrix
	float __6; // nearPlane
};
// UnityEngine.Windows.Speech.PhraseRecognizedEventArgs
struct __struct_116__ {
	int32_t __0; // confidence
	uintptr_t __1; // semanticMeanings
	uintptr_t __2; // text
	__struct_20__ __3; // phraseStartTime
	__struct_25__ __4; // phraseDuration
};
// UnityEngine.Windows.WebCam.PhotoCapture/PhotoCaptureResult
struct __struct_117__ {
	int32_t __0; // resultType
	int64_t __1; // hResult
};
// UnityEngine.ContactFilter2D
struct __struct_119__ {
	uint8_t __0; // useTriggers
	uint8_t __1; // useLayerMask
	uint8_t __2; // useDepth
	uint8_t __3; // useOutsideDepth
	uint8_t __4; // useNormalAngle
	uint8_t __5; // useOutsideNormalAngle
	__struct_46__ __6; // layerMask
	float __7; // minDepth
	float __8; // maxDepth
	float __9; // minNormalAngle
	float __10; // maxNormalAngle
};
// UnityEngine.Experimental.GlobalIllumination.LightDataGI
struct __struct_141__ {
	int32_t __0; // instanceID
	int32_t __1; // cookieID
	float __2; // cookieScale
	__struct_40__ __3; // color
	__struct_40__ __4; // indirectColor
	__struct_40__ __5; // orientation
	__struct_61__ __6; // position
	float __7; // range
	float __8; // coneAngle
	float __9; // innerConeAngle
	float __10; // shape0
	float __11; // shape1
	uint8_t __12; // type
	uint8_t __13; // mode
	uint8_t __14; // shadow
	uint8_t __15; // falloff
};
// UnityEngine.Color32
union __struct_143__ {
	#pragma pack(push, 1)
	struct {   int32_t __0;}; // rgba
	#pragma pack(pop)
	struct { int32_t __0_forAlignmentOnly;}; // rgba
	#pragma pack(push, 1)
	struct {   uint8_t __1;}; // r
	#pragma pack(pop)
	struct { uint8_t __1_forAlignmentOnly;}; // r
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[1];  uint8_t __2;}; // g
	#pragma pack(pop)
	struct { uint8_t __2_forAlignmentOnly;}; // g
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[2];  uint8_t __3;}; // b
	#pragma pack(pop)
	struct { uint8_t __3_forAlignmentOnly;}; // b
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[3];  uint8_t __4;}; // a
	#pragma pack(pop)
	struct { uint8_t __4_forAlignmentOnly;}; // a
};
// UnityEngine.ParticleSystem/Particle
struct __struct_145__ {
	__struct_61__ __0; // m_Position
	__struct_61__ __1; // m_Velocity
	__struct_61__ __2; // m_AnimatedVelocity
	__struct_61__ __3; // m_InitialVelocity
	__struct_61__ __4; // m_AxisOfRotation
	__struct_61__ __5; // m_Rotation
	__struct_61__ __6; // m_AngularVelocity
	__struct_61__ __7; // m_StartSize
	__struct_143__ __8; // m_StartColor
	uint32_t __9; // m_RandomSeed
	uint32_t __10; // m_ParentRandomSeed
	float __11; // m_Lifetime
	float __12; // m_StartLifetime
	int32_t __13; // m_MeshIndex
	float __14; // m_EmitAccumulator0
	float __15; // m_EmitAccumulator1
	uint32_t __16; // m_Flags
};
// UnityEngine.ParticleSystem/EmitParams
struct __struct_144__ {
	__struct_145__ __0; // m_Particle
	uint8_t __1; // m_PositionSet
	uint8_t __2; // m_VelocitySet
	uint8_t __3; // m_AxisOfRotationSet
	uint8_t __4; // m_RotationSet
	uint8_t __5; // m_AngularVelocitySet
	uint8_t __6; // m_StartSizeSet
	uint8_t __7; // m_StartColorSet
	uint8_t __8; // m_RandomSeedSet
	uint8_t __9; // m_StartLifetimeSet
	uint8_t __10; // m_MeshIndexSet
	uint8_t __11; // m_ApplyShapeToPosition
};
// UnityEngine.Playables.FrameData
struct __struct_146__ {
	uint64_t __0; // m_FrameID
	double __1; // m_DeltaTime
	float __2; // m_Weight
	float __3; // m_EffectiveWeight
	double __4; // m_EffectiveParentDelay
	float __5; // m_EffectiveParentSpeed
	float __6; // m_EffectiveSpeed
	int32_t __7; // m_Flags
	__struct_48__ __8; // m_Output
};
// UnityEngine.RenderTextureDescriptor
struct __struct_148__ {
	int32_t __0; // <width>k__BackingField
	int32_t __1; // <height>k__BackingField
	int32_t __2; // <msaaSamples>k__BackingField
	int32_t __3; // <volumeDepth>k__BackingField
	int32_t __4; // <mipCount>k__BackingField
	int32_t __5; // _graphicsFormat
	int32_t __6; // <stencilFormat>k__BackingField
	int32_t __7; // _depthBufferBits
	int32_t __8; // <dimension>k__BackingField
	int32_t __9; // <shadowSamplingMode>k__BackingField
	int32_t __10; // <vrUsage>k__BackingField
	int32_t __11; // _flags
	int32_t __12; // <memoryless>k__BackingField
};
// UnityEngine.AnimatorStateInfo
struct __struct_149__ {
	int32_t __0; // m_Name
	int32_t __1; // m_Path
	int32_t __2; // m_FullPath
	float __3; // m_NormalizedTime
	float __4; // m_Length
	float __5; // m_Speed
	float __6; // m_SpeedMultiplier
	int32_t __7; // m_Tag
	int32_t __8; // m_Loop
};
// Unity.Jobs.JobHandle
struct __struct_155__ {
	intptr_t __0; // jobGroup
	int32_t __1; // version
};
// UnityEngine.LightBakingOutput
struct __struct_157__ {
	int32_t __0; // probeOcclusionLightIndex
	int32_t __1; // occlusionMaskChannel
	int32_t __2; // lightmapBakeType
	int32_t __3; // mixedLightingMode
	uint8_t __4; // isBaked
};
// UnityEngine.RaycastHit2D
struct __struct_158__ {
	__struct_59__ __0; // m_Centroid
	__struct_59__ __1; // m_Point
	__struct_59__ __2; // m_Normal
	float __3; // m_Distance
	float __4; // m_Fraction
	int32_t __5; // m_Collider
};
FullName2Signature hybridclr::interpreter::g_fullName2SignatureStub[] = {
	{"System.Collections.Generic.KeyValuePair`2<u,i4>", "s0"},
	{"System.Guid", "s1"},
	{"System.Collections.Generic.KeyValuePair`2<System.Guid,i4>", "s2"},
	{"System.Collections.Generic.KeyValuePair`2<System.Guid,u>", "s3"},
	{"System.Collections.Generic.KeyValuePair`2<u,u>", "s4"},
	{"UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord", "s5"},
	{"System.Resources.ResourceLocator", "s0"},
	{"System.Collections.Generic.KeyValuePair`2<i4,u>", "s7"},
	{"System.Collections.Generic.KeyValuePair`2<u,System.Resources.ResourceLocator>", "s8"},
	{"System.Collections.Generic.KeyValuePair`2<u8,u>", "s9"},
	{"System.Collections.Generic.KeyValuePair`2<UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord,u>", "s10"},
	{"System.Collections.Generic.KeyValuePair`2<System.DateTime,u>", "s9"},
	{"System.Diagnostics.Tracing.EventProvider/SessionInfo", "s5"},
	{"System.Nullable`1<u>", "s13"},
	{"UnityEngine.BeforeRenderHelper/OrderBlock", "s7"},
	{"UnityEngine.UnitySynchronizationContext/WorkRequest", "s15"},
	{"System.Reflection.CustomAttributeNamedArgument", "s15"},
	{"System.Reflection.CustomAttributeTypedArgument", "s4"},
	{"System.ConsoleKeyInfo", "s18"},
	{"System.Decimal", "s19"},
	{"System.DateTime", "s20"},
	{"System.DateTimeOffset", "s21"},
	{"System.Diagnostics.Tracing.EventDescriptor", "s22"},
	{"System.Diagnostics.Tracing.SessionMask", "s23"},
	{"System.Threading.CancellationTokenRegistration", "s8"},
	{"System.TimeSpan", "s25"},
	{"System.TimeZoneInfo/TransitionTime", "s26"},
	{"Unity.Collections.NativeArray`1<u>", "s27"},
	{"UnityEngine.Animations.AnimationClipPlayable", "s48"},
	{"UnityEngine.Animations.AnimationLayerMixerPlayable", "s48"},
	{"UnityEngine.Animations.AnimationMixerPlayable", "s48"},
	{"UnityEngine.Animations.AnimationMotionXToDeltaPlayable", "s48"},
	{"UnityEngine.Animations.AnimationOffsetPlayable", "s48"},
	{"UnityEngine.Animations.AnimationPosePlayable", "s48"},
	{"UnityEngine.Animations.AnimationRemoveScalePlayable", "s48"},
	{"UnityEngine.Animations.AnimationScriptPlayable", "s48"},
	{"UnityEngine.Animations.AnimatorControllerPlayable", "s48"},
	{"UnityEngine.Audio.AudioClipPlayable", "s48"},
	{"UnityEngine.Audio.AudioMixerPlayable", "s48"},
	{"UnityEngine.Bounds", "s39"},
	{"UnityEngine.Color", "s40"},
	{"UnityEngine.Experimental.Playables.CameraPlayable", "s48"},
	{"UnityEngine.Experimental.Playables.MaterialEffectPlayable", "s48"},
	{"UnityEngine.Experimental.Playables.TextureMixerPlayable", "s48"},
	{"UnityEngine.Experimental.Video.VideoClipPlayable", "s48"},
	{"UnityEngine.Matrix4x4", "s45"},
	{"UnityEngine.PhysicsScene2D", "s46"},
	{"UnityEngine.PhysicsScene", "s46"},
	{"UnityEngine.Playables.PlayableHandle", "s48"},
	{"UnityEngine.Playables.PlayableOutputHandle", "s48"},
	{"UnityEngine.Playables.PlayableOutput", "s48"},
	{"UnityEngine.Playables.Playable", "s48"},
	{"UnityEngine.Quaternion", "s40"},
	{"UnityEngine.RectInt", "s19"},
	{"UnityEngine.Rect", "s40"},
	{"UnityEngine.Rendering.LODParameters", "s55"},
	{"UnityEngine.Rendering.RenderTargetIdentifier", "s56"},
	{"UnityEngine.Rendering.ScriptableRenderContext", "s57"},
	{"UnityEngine.Rendering.ShaderTagId", "s46"},
	{"UnityEngine.Vector2", "s59"},
	{"UnityEngine.Vector3Int", "s60"},
	{"UnityEngine.Vector3", "s61"},
	{"UnityEngine.Vector4", "s40"},
	{"UnityEngine.XR.Bone", "s63"},
	{"UnityEngine.XR.Eyes", "s63"},
	{"UnityEngine.XR.Hand", "s63"},
	{"UnityEngine.XR.InputDevice", "s66"},
	{"UnityEngine.XR.InputFeatureUsage", "s67"},
	{"UnityEngine.XR.MeshGenerationResult", "s68"},
	{"UnityEngine.XR.MeshId", "s69"},
	{"System.Nullable`1<u1>", "s70"},
	{"System.Nullable`1<i4>", "s71"},
	{"System.Runtime.InteropServices.GCHandle", "s46"},
	{"System.Threading.CancellationToken", "s73"},
	{"System.Threading.Tasks.VoidTaskResult", "s74"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Experimental.GlobalIllumination.LightDataGI>", "s27"},
	{"UnityEngine.Ray", "s39"},
	{"UnityEngine.SendMouseEvents/HitInfo", "s4"},
	{"System.Collections.DictionaryEntry", "s4"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<i4,u>", "s79"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,i4>", "s80"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,u>", "s81"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,System.Resources.ResourceLocator>", "s82"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u8,u>", "s83"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord,u>", "s84"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<i4,u>", "s85"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,i4>", "s86"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,u>", "s86"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,System.Resources.ResourceLocator>", "s86"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u8,u>", "s89"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord,u>", "s90"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<i4,u>", "s86"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,i4>", "s85"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,u>", "s86"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,System.Resources.ResourceLocator>", "s94"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u8,u>", "s86"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord,u>", "s86"},
	{"System:System.Collections.Generic.LinkedList`1/Enumerator<u>", "s97"},
	{"System.Collections.Generic.List`1/Enumerator<u1>", "s98"},
	{"System.Collections.Generic.List`1/Enumerator<System.Collections.Generic.KeyValuePair`2<System.DateTime,u>>", "s99"},
	{"System.Collections.Generic.List`1/Enumerator<System.Diagnostics.Tracing.EventProvider/SessionInfo>", "s90"},
	{"System.Collections.Generic.List`1/Enumerator<i4>", "s85"},
	{"System.Collections.Generic.List`1/Enumerator<u>", "s86"},
	{"System.Collections.Generic.List`1/Enumerator<u8>", "s89"},
	{"System.Collections.Generic.List`1/Enumerator<UnityEngine.BeforeRenderHelper/OrderBlock>", "s104"},
	{"System.Collections.Generic.List`1/Enumerator<UnityEngine.UnitySynchronizationContext/WorkRequest>", "s105"},
	{"System.Threading.AsyncLocalValueChangedArgs`1<u>", "s106"},
	{"UnityEngine.VFX.VFXOutputEventArgs", "s7"},
	{"UnityEngine.XR.XRNodeState", "s108"},
	{"UnityEngine.Profiling.Experimental.DebugScreenCapture", "s109"},
	{"System.Diagnostics.Tracing.EmptyStruct", "s110"},
	{"System.Runtime.Serialization.StreamingContext", "s0"},
	{"UnityEngine.CullingGroupEvent", "s112"},
	{"UnityEngine.SceneManagement.Scene", "s46"},
	{"UnityEngine.Playables.PlayableGraph", "s48"},
	{"UnityEngine.Rendering.BatchCullingContext", "s115"},
	{"UnityEngine.Windows.Speech.PhraseRecognizedEventArgs", "s116"},
	{"UnityEngine.Windows.WebCam.PhotoCapture/PhotoCaptureResult", "s117"},
	{"UnityEngine.Windows.WebCam.VideoCapture/VideoCaptureResult", "s117"},
	{"UnityEngine.ContactFilter2D", "s119"},
	{"System.ParameterizedStrings/FormatParam", "s7"},
	{"System.RuntimeFieldHandle", "s57"},
	{"System.RuntimeTypeHandle", "s57"},
	{"System.RuntimeMethodHandle", "s57"},
	{"System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<u1>", "s15"},
	{"System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<u>", "s15"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<u1>", "s13"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<i4>", "s13"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<u>", "s13"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Threading.Tasks.VoidTaskResult>", "s13"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<u1>", "s13"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<i4>", "s13"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<u>", "s13"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<System.Threading.Tasks.VoidTaskResult>", "s13"},
	{"System.Runtime.CompilerServices.TaskAwaiter`1<u1>", "s73"},
	{"System.Runtime.CompilerServices.TaskAwaiter`1<i4>", "s73"},
	{"System.Runtime.CompilerServices.TaskAwaiter`1<u>", "s73"},
	{"System.Runtime.CompilerServices.TaskAwaiter`1<System.Threading.Tasks.VoidTaskResult>", "s73"},
	{"System.Runtime.Remoting.Messaging.LogicalCallContext/Reader", "s73"},
	{"System.Runtime.Serialization.SerializationEntry", "s15"},
	{"System.Threading.SparselyPopulatedArrayAddInfo`1<u>", "s0"},
	{"UnityEngine.Experimental.GlobalIllumination.LightDataGI", "s141"},
	{"UnityEngine.LayerMask", "s46"},
	{"UnityEngine.Color32", "s143"},
	{"UnityEngine.ParticleSystem/EmitParams", "s144"},
	{"UnityEngine.ParticleSystem/Particle", "s145"},
	{"UnityEngine.Playables.FrameData", "s146"},
	{"Unity.Collections.NativeArray`1<u1>", "s27"},
	{"UnityEngine.RenderTextureDescriptor", "s148"},
	{"UnityEngine.AnimatorStateInfo", "s149"},
	{"Unity.Collections.NativeArray`1/Enumerator<u>", "s85"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Experimental.GlobalIllumination.LightDataGI>", "s85"},
	{"Unity.Collections.NativeArray`1<i4>", "s27"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Plane>", "s27"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Rendering.BatchVisibility>", "s27"},
	{"Unity.Jobs.JobHandle", "s155"},
	{"UnityEngine.Experimental.GlobalIllumination.LinearColor", "s40"},
	{"UnityEngine.LightBakingOutput", "s157"},
	{"UnityEngine.RaycastHit2D", "s158"},
	{"UnityEngine.Yoga.YogaSize", "s59"},
	{ nullptr, nullptr},
};

static void __M2N_i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_i1i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i1r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_110__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_20__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_21__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_4__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i1ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1us4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_110__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_20__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_21__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_4__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2us4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_i4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_110__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_20__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_21__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s39u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_39__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s39ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_39__ __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s39ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_39__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4s39ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_39__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_4__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s59s59s119u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, __struct_119__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4s59s59s119ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, __struct_119__ __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4s61s61u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s61s61ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4s61s61ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4s61s61ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint16_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint16_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s15u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_15__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_2__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s5u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_5__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s7u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_7__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s9u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_9__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4i4u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4u8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint64_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4ui4ui4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, int32_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us13s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, __struct_13__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us15(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us15i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_15__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us15s15(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_15__ __arg1, __struct_15__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us25u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us2s2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_2__ __arg1, __struct_2__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us39r4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, float __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4us4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us5(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us59s59r4s119u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_59__ __arg1, __struct_59__ __arg2, float __arg3, __struct_119__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4us5i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us5s5(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, __struct_5__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us61s61ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, __struct_61__ __arg2, uintptr_t __arg3, float __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4us7(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_7__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us7i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_7__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us7s7(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_7__ __arg1, __struct_7__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us9(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_9__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us9i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_9__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us9s9(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_9__ __arg1, __struct_9__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uu2i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uu8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_i4uui4i4ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, uint8_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4uui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uui4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uus0i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus13i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_13__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus15i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_15__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_1__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus5i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_5__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus7i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_7__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus9i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_9__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uuu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuu8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint64_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_i8i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_110__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_20__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_21__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_4__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i8ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ui8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8ui8i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i8ui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8us4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ii4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ii4ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(int32_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ii8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_iii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iii4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iiiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iiuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iiuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_is46(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(__struct_46__ __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_iu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_iu1u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_iui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iui4i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_iuii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iuu2u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_iuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_61__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4ur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4uur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, double __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8ur8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s0u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_0__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_0__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s0uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_0__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_0__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s104u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_104__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_104__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s105u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_105__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_105__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s10u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_10__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_10__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s13u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_13__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_13__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s13uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_13__ (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_13__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s141u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s15(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_15__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_15__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s155uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s155uus115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s157u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158s59s59(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s158s59s59r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s158s59s59r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s158s59s59r4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, float __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s158s59s59r4i4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, float __arg2, int32_t __arg3, float __arg4, float __arg5, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s158us59s59r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(uintptr_t __arg0, __struct_59__ __arg1, __struct_59__ __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s158us59s59r4s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(uintptr_t __arg0, __struct_59__ __arg1, __struct_59__ __arg2, float __arg3, __struct_119__ __arg4, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s15u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_15__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_15__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s15ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_15__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_15__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s18(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_18__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_18__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s18u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_18__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_18__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s18uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_18__ (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_18__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s19i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19s19i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(__struct_19__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s19u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s19uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s20i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s20s20i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(__struct_20__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s20s20s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(__struct_20__ __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s20s20u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(__struct_20__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s20s20uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(__struct_20__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s20u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s20ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s20ui4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_s20ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s20ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s20us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s20uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_20__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_20__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s23(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_23__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_23__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s23i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_23__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_23__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s23u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_23__ (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(__struct_23__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s25i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s25r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s25s20s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(__struct_20__ __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s25s25s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(__struct_25__ __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s25u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s25us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s25us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s25uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_25__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_25__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s26s20i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_26__ (*NativeMethod)(__struct_20__ __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_26__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s26s20i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_26__ (*NativeMethod)(__struct_20__ __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_26__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s26u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_26__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_26__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s27ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_27__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_27__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_2__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_2__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39us61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39us61i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s3u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_3__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_3__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s40s40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(__struct_40__ __arg0, const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s40s40r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(__struct_40__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s40u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s40ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s45(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_45__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_45__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s45s61s40s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_45__ (*NativeMethod)(__struct_61__ __arg0, __struct_40__ __arg1, __struct_61__ __arg2, const MethodInfo* method);
    *(__struct_45__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s45u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_45__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_45__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s46(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_46__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_46__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s46i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_46__ (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(__struct_46__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s46i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_46__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_46__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s46u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_46__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_46__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s46ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_46__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_46__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s48(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_48__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_48__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s48u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_48__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_48__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s48us48u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_48__ (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_48__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s48uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_48__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_48__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_4__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_4__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_4__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_4__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s57u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_57__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_57__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s59(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_59__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_59__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s59s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_59__ (*NativeMethod)(__struct_61__ __arg0, const MethodInfo* method);
    *(__struct_59__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s59u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_59__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_59__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s59ur4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_59__ (*NativeMethod)(uintptr_t __arg0, float __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_59__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s59uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_59__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_59__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s59uur4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_59__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method);
    *(__struct_59__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s5u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_5__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_5__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s5ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_5__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_5__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_61__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_61__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s61s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_61__ (*NativeMethod)(__struct_61__ __arg0, const MethodInfo* method);
    *(__struct_61__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s61s61r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_61__ (*NativeMethod)(__struct_61__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_61__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s61s61s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_61__ (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, const MethodInfo* method);
    *(__struct_61__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s61u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_61__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_61__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s69u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_69__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_69__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s70u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_70__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_70__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s71u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_71__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_71__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_73__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_73__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s73u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_73__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_73__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s74u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_74__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_74__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s74uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_74__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_74__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s74uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_74__ (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_74__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s79u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_79__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_79__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s7i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_7__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_7__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s7u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_7__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_7__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s7ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_7__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_7__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s80u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_80__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_80__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s81u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_81__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_81__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s82u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_82__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_82__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s84u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_84__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_84__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s85u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s86u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_86__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_86__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s89u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_89__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_89__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_8__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_8__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s90u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_90__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_90__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s94u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s97u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_97__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_97__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s98u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_98__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_98__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s99u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_99__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_99__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s9u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_9__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_9__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s9ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_9__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_9__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_typedbyrefuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef Il2CppTypedRef (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(Il2CppTypedRef*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u1i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1iu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1iuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(float __arg0, float __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_110__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s19s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_19__ __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_20__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s20s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_20__ __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_21__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s25s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_25__ __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s26s26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_26__ __arg0, __struct_26__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s39r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, float __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s39r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, float __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s39r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, float __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s39u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s39ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s39ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s39ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_4__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s46s46(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_46__ __arg0, __struct_46__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s48s48(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_48__ __arg0, __struct_48__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s4s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_4__ __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s59s59(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s60s60(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_60__ __arg0, __struct_60__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_60__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_60__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s61s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s61s61r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, float __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s61s61r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s61s61r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1s61s61u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s61s61ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s61s61ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1s61s61ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1s73s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_73__ __arg0, __struct_73__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint16_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4i8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_73__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us0s0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, __struct_0__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us10(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_10__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_10__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us13s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, __struct_13__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us15(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us15s15(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_15__ __arg1, __struct_15__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us18(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_18__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_18__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us1i4i4u1u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, uint8_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_u1us1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us1i4uu1u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, uintptr_t __arg3, uint8_t __arg4, uint8_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_u1us1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us1uu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1us1uu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1us2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_2__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us22(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_22__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_22__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us23(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_23__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_23__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us25s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, __struct_25__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us45(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_45__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_45__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us46(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_46__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us48(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us5(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us55(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_55__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_55__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us56(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_56__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_56__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us57(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us59(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_59__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us5s5(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, __struct_5__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us5u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us5uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us60(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_60__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_60__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us60uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_60__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_60__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us61s61r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, __struct_61__ __arg2, float __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1us61s61ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, __struct_61__ __arg2, uintptr_t __arg3, float __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_u1us63(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us66(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us67(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_67__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_67__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us69(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_69__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us7(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_7__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us70(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_70__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us71(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_71__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_71__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_73__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us73u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_73__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us74(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_74__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_74__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us7s7(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_7__ __arg1, __struct_7__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_8__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_8__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us9(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_9__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us9s9(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_9__ __arg1, __struct_9__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu1i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu2u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu8uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uui4uu1u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uint8_t __arg4, uint8_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_u1uus0u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uuu1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uuuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uuuui4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, intptr_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u2i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u2r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_110__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_20__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_21__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_4__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint16_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u2ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2us4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_110__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_20__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_21__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s23(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_23__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_23__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_4__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4us4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_110__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_20__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_21__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s23(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_23__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_23__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_4__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u8ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8us20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8us25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8us4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ui4i4i4u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, uint16_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_ui4s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, __struct_73__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int64_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uiiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ur4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(float __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ur8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(double __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_13__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_19__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us19uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_19__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_1__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us20s20s25s26s26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_20__ __arg0, __struct_20__ __arg1, __struct_25__ __arg2, __struct_26__ __arg3, __struct_26__ __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_us39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us39r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_39__ __arg0, float __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us39r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_39__ __arg0, float __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us39r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_39__ __arg0, float __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_us57(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_57__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us57s57(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_57__ __arg0, __struct_57__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us59s59uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_59__ __arg0, __struct_59__ __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_us5u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_5__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us61s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us61s61r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, float __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us61s61r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_us61s61r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_us70(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_70__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us71(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_71__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_71__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_73__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us73s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_73__ __arg0, __struct_73__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_uu2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint16_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uu4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uu8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint64_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui2uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uui4i8i8u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, int64_t __arg3, uint8_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uui4i8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uui4iuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uui4s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_73__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint16_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uui4uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uui4uuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, int64_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuiuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, float __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uur4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, float __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uur8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, double __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uur8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, double __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus0uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus106uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_106__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus108uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_108__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_108__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus110uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus112uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_112__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_112__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus116uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_116__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus117uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_117__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus117uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_117__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus13(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus13uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_13__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_13__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus15s15uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_15__ __arg1, __struct_15__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus15uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_15__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus19u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uus19uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_19__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uus1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus20uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus21uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus25uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus25uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uus25uuuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uint8_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uus2s2uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_2__ __arg1, __struct_2__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus46i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_46__ __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus46s46uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_46__ __arg1, __struct_46__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus46uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_46__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus48uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus5(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus5s5uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, __struct_5__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus5uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus66uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus68uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus7s7uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_7__ __arg1, __struct_7__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus7uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_7__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus9s9uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_9__ __arg1, __struct_9__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus9uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_9__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu1i4i4i4ui4i4i4i4u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, uint8_t __arg10, uintptr_t __arg11, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_uuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu1u1i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuu1u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu2uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuu2uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu8u8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuu8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuui4i4uu1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uint8_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_uuui4u1i8i8uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, int64_t __arg4, int64_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_uuui4ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuui4uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuui4uuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_uuui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuur4i4r4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uuur4r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuur8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, double __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuus0u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuus115uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_115__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuus19u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, uint8_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuus27uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_27__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuuu1s109uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, __struct_109__ __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuu4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuus0u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_0__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuus19u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_19__ __arg3, uint8_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuus25u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_25__ __arg3, uint8_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuus73i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_73__ __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuuu1u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_v(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_vi(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vi4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vi4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vi4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vi4uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vi8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vii4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_viiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_viui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_viuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_25__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs40uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_40__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs45(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_45__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_45__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs61s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs61s61s40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, __struct_40__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs61s61s40r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, __struct_40__ __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vs61s61s40r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_61__ __arg0, __struct_61__ __arg1, __struct_40__ __arg2, float __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vtypedbyrefu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(Il2CppTypedRef __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<Il2CppTypedRef>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vu1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4i4i4i4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, intptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vui4i4i4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4i4i4u1i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, intptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4i4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4i8i8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, int64_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_141__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s15(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_15__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_4__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s5(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_5__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s7(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_7__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s9(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_9__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4u1u1i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, uint8_t __arg3, int64_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4u1u1u1u1i4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, int32_t __arg6, int64_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vui4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint16_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4uuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui8s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, __struct_25__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui8ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, int64_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui8ui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, int64_t __arg3, int64_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuiu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vur4i4r4i4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, int32_t __arg2, float __arg3, int32_t __arg4, intptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vur4r4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, intptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vur4r4r4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus10(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_10__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_10__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus106(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus108(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_108__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus112(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_112__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_112__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_116__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_117__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus117u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_117__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_143__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus144i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus145(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_145__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_145__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus15(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_15__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus18(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_18__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_18__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus1i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus1ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus1ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, int64_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_2__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus20u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_20__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_4__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus40s40s40s40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, __struct_40__ __arg2, __struct_40__ __arg3, __struct_40__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus40uu1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vus45(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_45__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_45__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus46(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_46__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus46i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_46__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus46s46(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_46__ __arg1, __struct_46__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_46__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus48(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus48s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, __struct_146__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus48s146u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, __struct_146__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus48uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus5(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus57(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus57u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_57__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus57uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_57__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus59s59(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_59__ __arg1, __struct_59__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus5u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus5u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_5__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_5__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus60(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_60__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_60__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus60u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_60__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_60__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus60uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_60__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_60__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus61s61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, __struct_61__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus61s61r4r4s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, __struct_61__ __arg2, float __arg3, float __arg4, __struct_143__ __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vus66(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus7(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_7__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_7__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus73i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_73__ __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus74(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_74__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_74__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_8__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_8__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus9(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_9__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_9__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vutypedbyrefu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, Il2CppTypedRef __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<Il2CppTypedRef>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1i4i4s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, __struct_73__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1s74i4s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, __struct_74__ __arg2, int32_t __arg3, __struct_73__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_74__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1u1i4s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, __struct_73__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1u1i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1u1u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuu1ui4s73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, int32_t __arg3, __struct_73__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1uu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1uuuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, int32_t __arg6, int32_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu2i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuu2i4u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuu2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu4u2u2u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint16_t __arg2, uint16_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_vuu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int16_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuui4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuui4i4i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int64_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4s48(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_48__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4u1i8i8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, int64_t __arg4, int64_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, int64_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui8ui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, int64_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuui8us1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, __struct_1__ __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, double __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus149i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_149__ __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus149i4s48(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_149__ __arg2, int32_t __arg3, __struct_48__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuus19u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus1uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_1__ __arg2, uintptr_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuus20(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_20__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_20__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_27__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus73(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_73__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1s109(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, __struct_109__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint16_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuui4uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuus0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_0__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuus19u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_19__ __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuus25s25(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_25__ __arg3, __struct_25__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_25__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuus73i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_73__ __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuu1i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuuui4uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuuus73i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, __struct_73__ __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_73__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuuuui4uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, int32_t __arg5, uintptr_t __arg6, uint8_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


Managed2NativeMethodInfo hybridclr::interpreter::g_managed2nativeStub[] = 
{

	{"i", __M2N_i},
	{"i1i", __M2N_i1i},
	{"i1i1", __M2N_i1i1},
	{"i1i2", __M2N_i1i2},
	{"i1i4", __M2N_i1i4},
	{"i1i8", __M2N_i1i8},
	{"i1iiu", __M2N_i1iiu},
	{"i1r4", __M2N_i1r4},
	{"i1r8", __M2N_i1r8},
	{"i1s1", __M2N_i1s1},
	{"i1s110", __M2N_i1s110},
	{"i1s13", __M2N_i1s13},
	{"i1s19", __M2N_i1s19},
	{"i1s20", __M2N_i1s20},
	{"i1s21", __M2N_i1s21},
	{"i1s25", __M2N_i1s25},
	{"i1s4", __M2N_i1s4},
	{"i1u", __M2N_i1u},
	{"i1u1", __M2N_i1u1},
	{"i1u2", __M2N_i1u2},
	{"i1u4", __M2N_i1u4},
	{"i1u8", __M2N_i1u8},
	{"i1ui", __M2N_i1ui},
	{"i1ui1", __M2N_i1ui1},
	{"i1ui2", __M2N_i1ui2},
	{"i1ui4", __M2N_i1ui4},
	{"i1ui4u", __M2N_i1ui4u},
	{"i1ui8", __M2N_i1ui8},
	{"i1ur4", __M2N_i1ur4},
	{"i1ur8", __M2N_i1ur8},
	{"i1us1", __M2N_i1us1},
	{"i1us110", __M2N_i1us110},
	{"i1us13", __M2N_i1us13},
	{"i1us19", __M2N_i1us19},
	{"i1us20", __M2N_i1us20},
	{"i1us21", __M2N_i1us21},
	{"i1us25", __M2N_i1us25},
	{"i1us4", __M2N_i1us4},
	{"i1uu", __M2N_i1uu},
	{"i1uu1", __M2N_i1uu1},
	{"i1uu2", __M2N_i1uu2},
	{"i1uu4", __M2N_i1uu4},
	{"i1uu8", __M2N_i1uu8},
	{"i1uuu", __M2N_i1uuu},
	{"i2i", __M2N_i2i},
	{"i2i1", __M2N_i2i1},
	{"i2i2", __M2N_i2i2},
	{"i2i4", __M2N_i2i4},
	{"i2i8", __M2N_i2i8},
	{"i2iiu", __M2N_i2iiu},
	{"i2r4", __M2N_i2r4},
	{"i2r8", __M2N_i2r8},
	{"i2s1", __M2N_i2s1},
	{"i2s110", __M2N_i2s110},
	{"i2s13", __M2N_i2s13},
	{"i2s19", __M2N_i2s19},
	{"i2s20", __M2N_i2s20},
	{"i2s21", __M2N_i2s21},
	{"i2s25", __M2N_i2s25},
	{"i2s4", __M2N_i2s4},
	{"i2u", __M2N_i2u},
	{"i2u1", __M2N_i2u1},
	{"i2u2", __M2N_i2u2},
	{"i2u4", __M2N_i2u4},
	{"i2u8", __M2N_i2u8},
	{"i2ui", __M2N_i2ui},
	{"i2ui1", __M2N_i2ui1},
	{"i2ui2", __M2N_i2ui2},
	{"i2ui4", __M2N_i2ui4},
	{"i2ui4u", __M2N_i2ui4u},
	{"i2ui8", __M2N_i2ui8},
	{"i2ur4", __M2N_i2ur4},
	{"i2ur8", __M2N_i2ur8},
	{"i2us1", __M2N_i2us1},
	{"i2us110", __M2N_i2us110},
	{"i2us13", __M2N_i2us13},
	{"i2us19", __M2N_i2us19},
	{"i2us20", __M2N_i2us20},
	{"i2us21", __M2N_i2us21},
	{"i2us25", __M2N_i2us25},
	{"i2us4", __M2N_i2us4},
	{"i2uu", __M2N_i2uu},
	{"i2uu1", __M2N_i2uu1},
	{"i2uu2", __M2N_i2uu2},
	{"i2uu4", __M2N_i2uu4},
	{"i2uu8", __M2N_i2uu8},
	{"i2uuu", __M2N_i2uuu},
	{"i4", __M2N_i4},
	{"i4i", __M2N_i4i},
	{"i4i1", __M2N_i4i1},
	{"i4i2", __M2N_i4i2},
	{"i4i4", __M2N_i4i4},
	{"i4i4i4", __M2N_i4i4i4},
	{"i4i4u1", __M2N_i4i4u1},
	{"i4i8", __M2N_i4i8},
	{"i4iiu", __M2N_i4iiu},
	{"i4r4", __M2N_i4r4},
	{"i4r8", __M2N_i4r8},
	{"i4s1", __M2N_i4s1},
	{"i4s110", __M2N_i4s110},
	{"i4s13", __M2N_i4s13},
	{"i4s19", __M2N_i4s19},
	{"i4s20", __M2N_i4s20},
	{"i4s21", __M2N_i4s21},
	{"i4s25", __M2N_i4s25},
	{"i4s39u", __M2N_i4s39u},
	{"i4s39ur4", __M2N_i4s39ur4},
	{"i4s39ur4i4", __M2N_i4s39ur4i4},
	{"i4s39ur4i4i4", __M2N_i4s39ur4i4i4},
	{"i4s4", __M2N_i4s4},
	{"i4s59s59s119u", __M2N_i4s59s59s119u},
	{"i4s59s59s119ur4", __M2N_i4s59s59s119ur4},
	{"i4s61s61u", __M2N_i4s61s61u},
	{"i4s61s61ur4", __M2N_i4s61s61ur4},
	{"i4s61s61ur4i4", __M2N_i4s61s61ur4i4},
	{"i4s61s61ur4i4i4", __M2N_i4s61s61ur4i4i4},
	{"i4u", __M2N_i4u},
	{"i4u1", __M2N_i4u1},
	{"i4u2", __M2N_i4u2},
	{"i4u2i4", __M2N_i4u2i4},
	{"i4u2u2", __M2N_i4u2u2},
	{"i4u4", __M2N_i4u4},
	{"i4u4i4", __M2N_i4u4i4},
	{"i4u8", __M2N_i4u8},
	{"i4ui", __M2N_i4ui},
	{"i4ui1", __M2N_i4ui1},
	{"i4ui2", __M2N_i4ui2},
	{"i4ui4", __M2N_i4ui4},
	{"i4ui4i4", __M2N_i4ui4i4},
	{"i4ui4i4i4", __M2N_i4ui4i4i4},
	{"i4ui4i4i4u", __M2N_i4ui4i4i4u},
	{"i4ui4i4s15u", __M2N_i4ui4i4s15u},
	{"i4ui4i4s2u", __M2N_i4ui4i4s2u},
	{"i4ui4i4s5u", __M2N_i4ui4i4s5u},
	{"i4ui4i4s7u", __M2N_i4ui4i4s7u},
	{"i4ui4i4s9u", __M2N_i4ui4i4s9u},
	{"i4ui4i4u", __M2N_i4ui4i4u},
	{"i4ui4i4u1u", __M2N_i4ui4i4u1u},
	{"i4ui4i4u8u", __M2N_i4ui4i4u8u},
	{"i4ui4i4uu", __M2N_i4ui4i4uu},
	{"i4ui4u", __M2N_i4ui4u},
	{"i4ui4u1", __M2N_i4ui4u1},
	{"i4ui4ui4i4", __M2N_i4ui4ui4i4},
	{"i4ui4ui4i4i4", __M2N_i4ui4ui4i4i4},
	{"i4ui4ui4i4ui4", __M2N_i4ui4ui4i4ui4},
	{"i4ui8", __M2N_i4ui8},
	{"i4ur4", __M2N_i4ur4},
	{"i4ur8", __M2N_i4ur8},
	{"i4us0", __M2N_i4us0},
	{"i4us1", __M2N_i4us1},
	{"i4us110", __M2N_i4us110},
	{"i4us13", __M2N_i4us13},
	{"i4us13s13", __M2N_i4us13s13},
	{"i4us15", __M2N_i4us15},
	{"i4us15i4i4", __M2N_i4us15i4i4},
	{"i4us15s15", __M2N_i4us15s15},
	{"i4us19", __M2N_i4us19},
	{"i4us1u", __M2N_i4us1u},
	{"i4us20", __M2N_i4us20},
	{"i4us21", __M2N_i4us21},
	{"i4us25", __M2N_i4us25},
	{"i4us25u1", __M2N_i4us25u1},
	{"i4us2s2", __M2N_i4us2s2},
	{"i4us39r4ui4", __M2N_i4us39r4ui4},
	{"i4us4", __M2N_i4us4},
	{"i4us5", __M2N_i4us5},
	{"i4us59s59r4s119u", __M2N_i4us59s59r4s119u},
	{"i4us5i4i4", __M2N_i4us5i4i4},
	{"i4us5s5", __M2N_i4us5s5},
	{"i4us61s61ur4i4i4", __M2N_i4us61s61ur4i4i4},
	{"i4us7", __M2N_i4us7},
	{"i4us7i4i4", __M2N_i4us7i4i4},
	{"i4us7s7", __M2N_i4us7s7},
	{"i4us9", __M2N_i4us9},
	{"i4us9i4i4", __M2N_i4us9i4i4},
	{"i4us9s9", __M2N_i4us9s9},
	{"i4uu", __M2N_i4uu},
	{"i4uu1", __M2N_i4uu1},
	{"i4uu1i4i4", __M2N_i4uu1i4i4},
	{"i4uu1u1", __M2N_i4uu1u1},
	{"i4uu2", __M2N_i4uu2},
	{"i4uu2i4", __M2N_i4uu2i4},
	{"i4uu2i4i4", __M2N_i4uu2i4i4},
	{"i4uu4", __M2N_i4uu4},
	{"i4uu8", __M2N_i4uu8},
	{"i4uu8i4i4", __M2N_i4uu8i4i4},
	{"i4uu8u8", __M2N_i4uu8u8},
	{"i4uui4", __M2N_i4uui4},
	{"i4uui4i4", __M2N_i4uui4i4},
	{"i4uui4i4i4", __M2N_i4uui4i4i4},
	{"i4uui4i4u", __M2N_i4uui4i4u},
	{"i4uui4i4u1", __M2N_i4uui4i4u1},
	{"i4uui4i4ui4", __M2N_i4uui4i4ui4},
	{"i4uui4i4ui4i4i4", __M2N_i4uui4i4ui4i4i4},
	{"i4uui4i4ui4u1", __M2N_i4uui4i4ui4u1},
	{"i4uui4u1", __M2N_i4uui4u1},
	{"i4uui4ui4", __M2N_i4uui4ui4},
	{"i4uui4ui4u1", __M2N_i4uui4ui4u1},
	{"i4uus0i4i4", __M2N_i4uus0i4i4},
	{"i4uus13i4i4", __M2N_i4uus13i4i4},
	{"i4uus15i4i4", __M2N_i4uus15i4i4},
	{"i4uus1i4i4", __M2N_i4uus1i4i4},
	{"i4uus5i4i4", __M2N_i4uus5i4i4},
	{"i4uus7i4i4", __M2N_i4uus7i4i4},
	{"i4uus9i4i4", __M2N_i4uus9i4i4},
	{"i4uuu", __M2N_i4uuu},
	{"i4uuu1i4i4", __M2N_i4uuu1i4i4},
	{"i4uuu1u", __M2N_i4uuu1u},
	{"i4uuu8i4i4", __M2N_i4uuu8i4i4},
	{"i4uuui4", __M2N_i4uuui4},
	{"i4uuui4i4", __M2N_i4uuui4i4},
	{"i4uuui4i4i4", __M2N_i4uuui4i4i4},
	{"i8", __M2N_i8},
	{"i8i", __M2N_i8i},
	{"i8i1", __M2N_i8i1},
	{"i8i2", __M2N_i8i2},
	{"i8i4", __M2N_i8i4},
	{"i8i8", __M2N_i8i8},
	{"i8iiu", __M2N_i8iiu},
	{"i8r4", __M2N_i8r4},
	{"i8r8", __M2N_i8r8},
	{"i8s1", __M2N_i8s1},
	{"i8s110", __M2N_i8s110},
	{"i8s13", __M2N_i8s13},
	{"i8s19", __M2N_i8s19},
	{"i8s20", __M2N_i8s20},
	{"i8s21", __M2N_i8s21},
	{"i8s25", __M2N_i8s25},
	{"i8s4", __M2N_i8s4},
	{"i8u", __M2N_i8u},
	{"i8u1", __M2N_i8u1},
	{"i8u2", __M2N_i8u2},
	{"i8u4", __M2N_i8u4},
	{"i8u8", __M2N_i8u8},
	{"i8ui", __M2N_i8ui},
	{"i8ui1", __M2N_i8ui1},
	{"i8ui2", __M2N_i8ui2},
	{"i8ui4", __M2N_i8ui4},
	{"i8ui4i4u", __M2N_i8ui4i4u},
	{"i8ui4u", __M2N_i8ui4u},
	{"i8ui8", __M2N_i8ui8},
	{"i8ui8i4", __M2N_i8ui8i4},
	{"i8ui8i4u", __M2N_i8ui8i4u},
	{"i8ui8i8", __M2N_i8ui8i8},
	{"i8ur4", __M2N_i8ur4},
	{"i8ur8", __M2N_i8ur8},
	{"i8us1", __M2N_i8us1},
	{"i8us110", __M2N_i8us110},
	{"i8us13", __M2N_i8us13},
	{"i8us19", __M2N_i8us19},
	{"i8us20", __M2N_i8us20},
	{"i8us21", __M2N_i8us21},
	{"i8us25", __M2N_i8us25},
	{"i8us4", __M2N_i8us4},
	{"i8uu", __M2N_i8uu},
	{"i8uu1", __M2N_i8uu1},
	{"i8uu2", __M2N_i8uu2},
	{"i8uu4", __M2N_i8uu4},
	{"i8uu8", __M2N_i8uu8},
	{"i8uuu", __M2N_i8uuu},
	{"ii", __M2N_ii},
	{"ii4", __M2N_ii4},
	{"ii4ii", __M2N_ii4ii},
	{"ii8", __M2N_ii8},
	{"iii", __M2N_iii},
	{"iii4", __M2N_iii4},
	{"iiiu", __M2N_iiiu},
	{"iiu", __M2N_iiu},
	{"iiuu", __M2N_iiuu},
	{"iiuuu1", __M2N_iiuuu1},
	{"is46", __M2N_is46},
	{"iu", __M2N_iu},
	{"iu1u1uu", __M2N_iu1u1uu},
	{"iui", __M2N_iui},
	{"iui4i4i4i4u", __M2N_iui4i4i4i4u},
	{"iuii", __M2N_iuii},
	{"iuu", __M2N_iuu},
	{"iuu2u2i4", __M2N_iuu2u2i4},
	{"iuuuu", __M2N_iuuuu},
	{"r4i", __M2N_r4i},
	{"r4i1", __M2N_r4i1},
	{"r4i2", __M2N_r4i2},
	{"r4i4", __M2N_r4i4},
	{"r4i8", __M2N_r4i8},
	{"r4iiu", __M2N_r4iiu},
	{"r4r4", __M2N_r4r4},
	{"r4r4r4", __M2N_r4r4r4},
	{"r4r4r4r4", __M2N_r4r4r4r4},
	{"r4r8", __M2N_r4r8},
	{"r4s19", __M2N_r4s19},
	{"r4s61", __M2N_r4s61},
	{"r4u", __M2N_r4u},
	{"r4u1", __M2N_r4u1},
	{"r4u2", __M2N_r4u2},
	{"r4u4", __M2N_r4u4},
	{"r4u8", __M2N_r4u8},
	{"r4ui4u", __M2N_r4ui4u},
	{"r4ur4", __M2N_r4ur4},
	{"r4ur4r4", __M2N_r4ur4r4},
	{"r4uu", __M2N_r4uu},
	{"r4uur4r4", __M2N_r4uur4r4},
	{"r4uuu", __M2N_r4uuu},
	{"r8i", __M2N_r8i},
	{"r8i1", __M2N_r8i1},
	{"r8i2", __M2N_r8i2},
	{"r8i4", __M2N_r8i4},
	{"r8i8", __M2N_r8i8},
	{"r8iiu", __M2N_r8iiu},
	{"r8r4", __M2N_r8r4},
	{"r8r8", __M2N_r8r8},
	{"r8r8r8", __M2N_r8r8r8},
	{"r8s19", __M2N_r8s19},
	{"r8u", __M2N_r8u},
	{"r8u1", __M2N_r8u1},
	{"r8u2", __M2N_r8u2},
	{"r8u4", __M2N_r8u4},
	{"r8u8", __M2N_r8u8},
	{"r8ui4u", __M2N_r8ui4u},
	{"r8ur8", __M2N_r8ur8},
	{"r8ur8r8", __M2N_r8ur8r8},
	{"r8uu", __M2N_r8uu},
	{"r8uuu", __M2N_r8uuu},
	{"s0u", __M2N_s0u},
	{"s0uu", __M2N_s0uu},
	{"s1", __M2N_s1},
	{"s104u", __M2N_s104u},
	{"s105u", __M2N_s105u},
	{"s10u", __M2N_s10u},
	{"s13u", __M2N_s13u},
	{"s13uu1", __M2N_s13uu1},
	{"s141u", __M2N_s141u},
	{"s141ui4", __M2N_s141ui4},
	{"s148u", __M2N_s148u},
	{"s15", __M2N_s15},
	{"s155uu", __M2N_s155uu},
	{"s155uus115", __M2N_s155uus115},
	{"s157u", __M2N_s157u},
	{"s158s59s59", __M2N_s158s59s59},
	{"s158s59s59r4", __M2N_s158s59s59r4},
	{"s158s59s59r4i4", __M2N_s158s59s59r4i4},
	{"s158s59s59r4i4r4", __M2N_s158s59s59r4i4r4},
	{"s158s59s59r4i4r4r4", __M2N_s158s59s59r4i4r4r4},
	{"s158us59s59r4i4", __M2N_s158us59s59r4i4},
	{"s158us59s59r4s119", __M2N_s158us59s59r4s119},
	{"s15u", __M2N_s15u},
	{"s15ui4", __M2N_s15ui4},
	{"s18", __M2N_s18},
	{"s18u1", __M2N_s18u1},
	{"s18uu1", __M2N_s18uu1},
	{"s19i1", __M2N_s19i1},
	{"s19i2", __M2N_s19i2},
	{"s19i4", __M2N_s19i4},
	{"s19i8", __M2N_s19i8},
	{"s19r4", __M2N_s19r4},
	{"s19r8", __M2N_s19r8},
	{"s19s19i4", __M2N_s19s19i4},
	{"s19u", __M2N_s19u},
	{"s19u1", __M2N_s19u1},
	{"s19u2", __M2N_s19u2},
	{"s19u4", __M2N_s19u4},
	{"s19u8", __M2N_s19u8},
	{"s19ui4u", __M2N_s19ui4u},
	{"s19uu", __M2N_s19uu},
	{"s1u", __M2N_s1u},
	{"s20", __M2N_s20},
	{"s20i8", __M2N_s20i8},
	{"s20s20i4", __M2N_s20s20i4},
	{"s20s20s25", __M2N_s20s20s25},
	{"s20s20u", __M2N_s20s20u},
	{"s20s20uu", __M2N_s20s20uu},
	{"s20u", __M2N_s20u},
	{"s20ui4", __M2N_s20ui4},
	{"s20ui4i4i4i4i4i4i4i4", __M2N_s20ui4i4i4i4i4i4i4i4},
	{"s20ui8", __M2N_s20ui8},
	{"s20ur8", __M2N_s20ur8},
	{"s20us25", __M2N_s20us25},
	{"s20uu", __M2N_s20uu},
	{"s23", __M2N_s23},
	{"s23i4", __M2N_s23i4},
	{"s23u8", __M2N_s23u8},
	{"s25", __M2N_s25},
	{"s25i8", __M2N_s25i8},
	{"s25r8", __M2N_s25r8},
	{"s25s20s20", __M2N_s25s20s20},
	{"s25s25s25", __M2N_s25s25s25},
	{"s25u", __M2N_s25u},
	{"s25us20", __M2N_s25us20},
	{"s25us25", __M2N_s25us25},
	{"s25uu", __M2N_s25uu},
	{"s26s20i4i4", __M2N_s26s20i4i4},
	{"s26s20i4i4i4", __M2N_s26s20i4i4i4},
	{"s26u", __M2N_s26u},
	{"s27ui4i4", __M2N_s27ui4i4},
	{"s2u", __M2N_s2u},
	{"s39us61", __M2N_s39us61},
	{"s39us61i4", __M2N_s39us61i4},
	{"s3u", __M2N_s3u},
	{"s40", __M2N_s40},
	{"s40s40", __M2N_s40s40},
	{"s40s40r4", __M2N_s40s40r4},
	{"s40u", __M2N_s40u},
	{"s40ui4", __M2N_s40ui4},
	{"s45", __M2N_s45},
	{"s45s61s40s61", __M2N_s45s61s40s61},
	{"s45u", __M2N_s45u},
	{"s46", __M2N_s46},
	{"s46i", __M2N_s46i},
	{"s46i4", __M2N_s46i4},
	{"s46u", __M2N_s46u},
	{"s46ui4", __M2N_s46ui4},
	{"s48", __M2N_s48},
	{"s48u", __M2N_s48u},
	{"s48us48u", __M2N_s48us48u},
	{"s48uu", __M2N_s48uu},
	{"s4u", __M2N_s4u},
	{"s4ui4", __M2N_s4ui4},
	{"s57u", __M2N_s57u},
	{"s59", __M2N_s59},
	{"s59s61", __M2N_s59s61},
	{"s59u", __M2N_s59u},
	{"s59ur4i4r4i4", __M2N_s59ur4i4r4i4},
	{"s59uu", __M2N_s59uu},
	{"s59uur4i4r4i4", __M2N_s59uur4i4r4i4},
	{"s5u", __M2N_s5u},
	{"s5ui4", __M2N_s5ui4},
	{"s61", __M2N_s61},
	{"s61s61", __M2N_s61s61},
	{"s61s61r4", __M2N_s61s61r4},
	{"s61s61s61", __M2N_s61s61s61},
	{"s61u", __M2N_s61u},
	{"s69u", __M2N_s69u},
	{"s70u", __M2N_s70u},
	{"s71u", __M2N_s71u},
	{"s73", __M2N_s73},
	{"s73u", __M2N_s73u},
	{"s74u", __M2N_s74u},
	{"s74uu", __M2N_s74uu},
	{"s74uu1", __M2N_s74uu1},
	{"s79u", __M2N_s79u},
	{"s7i4", __M2N_s7i4},
	{"s7u", __M2N_s7u},
	{"s7ui4", __M2N_s7ui4},
	{"s80u", __M2N_s80u},
	{"s81u", __M2N_s81u},
	{"s82u", __M2N_s82u},
	{"s83u", __M2N_s83u},
	{"s84u", __M2N_s84u},
	{"s85u", __M2N_s85u},
	{"s86u", __M2N_s86u},
	{"s89u", __M2N_s89u},
	{"s8u", __M2N_s8u},
	{"s90u", __M2N_s90u},
	{"s94u", __M2N_s94u},
	{"s97u", __M2N_s97u},
	{"s98u", __M2N_s98u},
	{"s99u", __M2N_s99u},
	{"s9u", __M2N_s9u},
	{"s9ui4", __M2N_s9ui4},
	{"typedbyrefuu", __M2N_typedbyrefuu},
	{"u", __M2N_u},
	{"u1", __M2N_u1},
	{"u1i", __M2N_u1i},
	{"u1i1", __M2N_u1i1},
	{"u1i2", __M2N_u1i2},
	{"u1i4", __M2N_u1i4},
	{"u1i4i4", __M2N_u1i4i4},
	{"u1i4u1", __M2N_u1i4u1},
	{"u1i4uuu", __M2N_u1i4uuu},
	{"u1i8", __M2N_u1i8},
	{"u1ii", __M2N_u1ii},
	{"u1iiu", __M2N_u1iiu},
	{"u1iu", __M2N_u1iu},
	{"u1iuuu", __M2N_u1iuuu},
	{"u1r4", __M2N_u1r4},
	{"u1r4r4", __M2N_u1r4r4},
	{"u1r8", __M2N_u1r8},
	{"u1s1", __M2N_u1s1},
	{"u1s110", __M2N_u1s110},
	{"u1s13", __M2N_u1s13},
	{"u1s19", __M2N_u1s19},
	{"u1s19s19", __M2N_u1s19s19},
	{"u1s1s1", __M2N_u1s1s1},
	{"u1s20", __M2N_u1s20},
	{"u1s20s20", __M2N_u1s20s20},
	{"u1s21", __M2N_u1s21},
	{"u1s25", __M2N_u1s25},
	{"u1s25s25", __M2N_u1s25s25},
	{"u1s26s26", __M2N_u1s26s26},
	{"u1s39", __M2N_u1s39},
	{"u1s39r4", __M2N_u1s39r4},
	{"u1s39r4i4", __M2N_u1s39r4i4},
	{"u1s39r4i4i4", __M2N_u1s39r4i4i4},
	{"u1s39u", __M2N_u1s39u},
	{"u1s39ur4", __M2N_u1s39ur4},
	{"u1s39ur4i4", __M2N_u1s39ur4i4},
	{"u1s39ur4i4i4", __M2N_u1s39ur4i4i4},
	{"u1s4", __M2N_u1s4},
	{"u1s46s46", __M2N_u1s46s46},
	{"u1s48s48", __M2N_u1s48s48},
	{"u1s4s4", __M2N_u1s4s4},
	{"u1s59s59", __M2N_u1s59s59},
	{"u1s60s60", __M2N_u1s60s60},
	{"u1s61s61", __M2N_u1s61s61},
	{"u1s61s61r4", __M2N_u1s61s61r4},
	{"u1s61s61r4i4", __M2N_u1s61s61r4i4},
	{"u1s61s61r4i4i4", __M2N_u1s61s61r4i4i4},
	{"u1s61s61u", __M2N_u1s61s61u},
	{"u1s61s61ur4", __M2N_u1s61s61ur4},
	{"u1s61s61ur4i4", __M2N_u1s61s61ur4i4},
	{"u1s61s61ur4i4i4", __M2N_u1s61s61ur4i4i4},
	{"u1s73s73", __M2N_u1s73s73},
	{"u1u", __M2N_u1u},
	{"u1u1", __M2N_u1u1},
	{"u1u2", __M2N_u1u2},
	{"u1u2u2", __M2N_u1u2u2},
	{"u1u4", __M2N_u1u4},
	{"u1u8", __M2N_u1u8},
	{"u1ui", __M2N_u1ui},
	{"u1ui1", __M2N_u1ui1},
	{"u1ui2", __M2N_u1ui2},
	{"u1ui4", __M2N_u1ui4},
	{"u1ui4i", __M2N_u1ui4i},
	{"u1ui4i4", __M2N_u1ui4i4},
	{"u1ui4i8", __M2N_u1ui4i8},
	{"u1ui4i8u1", __M2N_u1ui4i8u1},
	{"u1ui4s73", __M2N_u1ui4s73},
	{"u1ui4u", __M2N_u1ui4u},
	{"u1ui4u1", __M2N_u1ui4u1},
	{"u1ui4uu", __M2N_u1ui4uu},
	{"u1ui4uu1", __M2N_u1ui4uu1},
	{"u1ui8", __M2N_u1ui8},
	{"u1ur4", __M2N_u1ur4},
	{"u1ur8", __M2N_u1ur8},
	{"u1us0", __M2N_u1us0},
	{"u1us0s0", __M2N_u1us0s0},
	{"u1us1", __M2N_u1us1},
	{"u1us10", __M2N_u1us10},
	{"u1us110", __M2N_u1us110},
	{"u1us13", __M2N_u1us13},
	{"u1us13s13", __M2N_u1us13s13},
	{"u1us15", __M2N_u1us15},
	{"u1us15s15", __M2N_u1us15s15},
	{"u1us18", __M2N_u1us18},
	{"u1us19", __M2N_u1us19},
	{"u1us1i4", __M2N_u1us1i4},
	{"u1us1i4i4u1u1u", __M2N_u1us1i4i4u1u1u},
	{"u1us1i4u", __M2N_u1us1i4u},
	{"u1us1i4uu1u1u", __M2N_u1us1i4uu1u1u},
	{"u1us1s1", __M2N_u1us1s1},
	{"u1us1u", __M2N_u1us1u},
	{"u1us1ui4", __M2N_u1us1ui4},
	{"u1us1uu1i4", __M2N_u1us1uu1i4},
	{"u1us1uu1u", __M2N_u1us1uu1u},
	{"u1us2", __M2N_u1us2},
	{"u1us20", __M2N_u1us20},
	{"u1us21", __M2N_u1us21},
	{"u1us22", __M2N_u1us22},
	{"u1us23", __M2N_u1us23},
	{"u1us25", __M2N_u1us25},
	{"u1us25s25", __M2N_u1us25s25},
	{"u1us26", __M2N_u1us26},
	{"u1us27", __M2N_u1us27},
	{"u1us3", __M2N_u1us3},
	{"u1us39", __M2N_u1us39},
	{"u1us4", __M2N_u1us4},
	{"u1us40", __M2N_u1us40},
	{"u1us45", __M2N_u1us45},
	{"u1us46", __M2N_u1us46},
	{"u1us48", __M2N_u1us48},
	{"u1us5", __M2N_u1us5},
	{"u1us55", __M2N_u1us55},
	{"u1us56", __M2N_u1us56},
	{"u1us57", __M2N_u1us57},
	{"u1us59", __M2N_u1us59},
	{"u1us5s5", __M2N_u1us5s5},
	{"u1us5u", __M2N_u1us5u},
	{"u1us5uu1", __M2N_u1us5uu1},
	{"u1us60", __M2N_u1us60},
	{"u1us60uu", __M2N_u1us60uu},
	{"u1us61", __M2N_u1us61},
	{"u1us61s61r4i4i4", __M2N_u1us61s61r4i4i4},
	{"u1us61s61ur4i4i4", __M2N_u1us61s61ur4i4i4},
	{"u1us63", __M2N_u1us63},
	{"u1us66", __M2N_u1us66},
	{"u1us67", __M2N_u1us67},
	{"u1us68", __M2N_u1us68},
	{"u1us69", __M2N_u1us69},
	{"u1us7", __M2N_u1us7},
	{"u1us70", __M2N_u1us70},
	{"u1us71", __M2N_u1us71},
	{"u1us73", __M2N_u1us73},
	{"u1us73u", __M2N_u1us73u},
	{"u1us74", __M2N_u1us74},
	{"u1us7s7", __M2N_u1us7s7},
	{"u1us8", __M2N_u1us8},
	{"u1us9", __M2N_u1us9},
	{"u1us9s9", __M2N_u1us9s9},
	{"u1uu", __M2N_u1uu},
	{"u1uu1", __M2N_u1uu1},
	{"u1uu1i8", __M2N_u1uu1i8},
	{"u1uu1u1", __M2N_u1uu1u1},
	{"u1uu2", __M2N_u1uu2},
	{"u1uu2i4", __M2N_u1uu2i4},
	{"u1uu2u2i4", __M2N_u1uu2u2i4},
	{"u1uu4", __M2N_u1uu4},
	{"u1uu8", __M2N_u1uu8},
	{"u1uu8u", __M2N_u1uu8u},
	{"u1uu8u8", __M2N_u1uu8u8},
	{"u1uu8uu1", __M2N_u1uu8uu1},
	{"u1uui4", __M2N_u1uui4},
	{"u1uui4u", __M2N_u1uui4u},
	{"u1uui4u1", __M2N_u1uui4u1},
	{"u1uui4uu1u1u", __M2N_u1uui4uu1u1u},
	{"u1uus0u1", __M2N_u1uus0u1},
	{"u1uuu", __M2N_u1uuu},
	{"u1uuu1", __M2N_u1uuu1},
	{"u1uuu1ui4", __M2N_u1uuu1ui4},
	{"u1uuui4", __M2N_u1uuui4},
	{"u1uuui4i4i4", __M2N_u1uuui4i4i4},
	{"u1uuuu", __M2N_u1uuuu},
	{"u1uuuu1", __M2N_u1uuuu1},
	{"u1uuuu1u", __M2N_u1uuuu1u},
	{"u1uuuui4i", __M2N_u1uuuui4i},
	{"u2", __M2N_u2},
	{"u2i", __M2N_u2i},
	{"u2i1", __M2N_u2i1},
	{"u2i2", __M2N_u2i2},
	{"u2i4", __M2N_u2i4},
	{"u2i8", __M2N_u2i8},
	{"u2iiu", __M2N_u2iiu},
	{"u2r4", __M2N_u2r4},
	{"u2r8", __M2N_u2r8},
	{"u2s1", __M2N_u2s1},
	{"u2s110", __M2N_u2s110},
	{"u2s13", __M2N_u2s13},
	{"u2s19", __M2N_u2s19},
	{"u2s20", __M2N_u2s20},
	{"u2s21", __M2N_u2s21},
	{"u2s25", __M2N_u2s25},
	{"u2s4", __M2N_u2s4},
	{"u2u", __M2N_u2u},
	{"u2u1", __M2N_u2u1},
	{"u2u2", __M2N_u2u2},
	{"u2u2u", __M2N_u2u2u},
	{"u2u4", __M2N_u2u4},
	{"u2u8", __M2N_u2u8},
	{"u2ui", __M2N_u2ui},
	{"u2ui1", __M2N_u2ui1},
	{"u2ui2", __M2N_u2ui2},
	{"u2ui4", __M2N_u2ui4},
	{"u2ui4u", __M2N_u2ui4u},
	{"u2ui8", __M2N_u2ui8},
	{"u2ur4", __M2N_u2ur4},
	{"u2ur8", __M2N_u2ur8},
	{"u2us1", __M2N_u2us1},
	{"u2us110", __M2N_u2us110},
	{"u2us13", __M2N_u2us13},
	{"u2us19", __M2N_u2us19},
	{"u2us20", __M2N_u2us20},
	{"u2us21", __M2N_u2us21},
	{"u2us25", __M2N_u2us25},
	{"u2us4", __M2N_u2us4},
	{"u2uu", __M2N_u2uu},
	{"u2uu1", __M2N_u2uu1},
	{"u2uu2", __M2N_u2uu2},
	{"u2uu4", __M2N_u2uu4},
	{"u2uu8", __M2N_u2uu8},
	{"u2uuu", __M2N_u2uuu},
	{"u4", __M2N_u4},
	{"u4i", __M2N_u4i},
	{"u4i1", __M2N_u4i1},
	{"u4i2", __M2N_u4i2},
	{"u4i4", __M2N_u4i4},
	{"u4i8", __M2N_u4i8},
	{"u4r4", __M2N_u4r4},
	{"u4r8", __M2N_u4r8},
	{"u4s1", __M2N_u4s1},
	{"u4s110", __M2N_u4s110},
	{"u4s13", __M2N_u4s13},
	{"u4s19", __M2N_u4s19},
	{"u4s20", __M2N_u4s20},
	{"u4s21", __M2N_u4s21},
	{"u4s23", __M2N_u4s23},
	{"u4s25", __M2N_u4s25},
	{"u4s4", __M2N_u4s4},
	{"u4u", __M2N_u4u},
	{"u4u1", __M2N_u4u1},
	{"u4u2", __M2N_u4u2},
	{"u4u4", __M2N_u4u4},
	{"u4u8", __M2N_u4u8},
	{"u4ui", __M2N_u4ui},
	{"u4ui1", __M2N_u4ui1},
	{"u4ui2", __M2N_u4ui2},
	{"u4ui4", __M2N_u4ui4},
	{"u4ui4u", __M2N_u4ui4u},
	{"u4ui8", __M2N_u4ui8},
	{"u4ur4", __M2N_u4ur4},
	{"u4ur8", __M2N_u4ur8},
	{"u4us1", __M2N_u4us1},
	{"u4us110", __M2N_u4us110},
	{"u4us13", __M2N_u4us13},
	{"u4us19", __M2N_u4us19},
	{"u4us20", __M2N_u4us20},
	{"u4us21", __M2N_u4us21},
	{"u4us25", __M2N_u4us25},
	{"u4us4", __M2N_u4us4},
	{"u4uu", __M2N_u4uu},
	{"u4uu1", __M2N_u4uu1},
	{"u4uu2", __M2N_u4uu2},
	{"u4uu4", __M2N_u4uu4},
	{"u4uu8", __M2N_u4uu8},
	{"u8i", __M2N_u8i},
	{"u8i1", __M2N_u8i1},
	{"u8i2", __M2N_u8i2},
	{"u8i4", __M2N_u8i4},
	{"u8i8", __M2N_u8i8},
	{"u8r4", __M2N_u8r4},
	{"u8r8", __M2N_u8r8},
	{"u8s1", __M2N_u8s1},
	{"u8s110", __M2N_u8s110},
	{"u8s13", __M2N_u8s13},
	{"u8s19", __M2N_u8s19},
	{"u8s20", __M2N_u8s20},
	{"u8s21", __M2N_u8s21},
	{"u8s23", __M2N_u8s23},
	{"u8s25", __M2N_u8s25},
	{"u8s4", __M2N_u8s4},
	{"u8u", __M2N_u8u},
	{"u8u1", __M2N_u8u1},
	{"u8u2", __M2N_u8u2},
	{"u8u4", __M2N_u8u4},
	{"u8u8", __M2N_u8u8},
	{"u8ui", __M2N_u8ui},
	{"u8ui1", __M2N_u8ui1},
	{"u8ui2", __M2N_u8ui2},
	{"u8ui4", __M2N_u8ui4},
	{"u8ui4u", __M2N_u8ui4u},
	{"u8ui8", __M2N_u8ui8},
	{"u8ur4", __M2N_u8ur4},
	{"u8ur8", __M2N_u8ur8},
	{"u8us1", __M2N_u8us1},
	{"u8us110", __M2N_u8us110},
	{"u8us13", __M2N_u8us13},
	{"u8us19", __M2N_u8us19},
	{"u8us20", __M2N_u8us20},
	{"u8us21", __M2N_u8us21},
	{"u8us25", __M2N_u8us25},
	{"u8us4", __M2N_u8us4},
	{"u8uu", __M2N_u8uu},
	{"u8uu1", __M2N_u8uu1},
	{"u8uu2", __M2N_u8uu2},
	{"u8uu4", __M2N_u8uu4},
	{"u8uu8", __M2N_u8uu8},
	{"ui", __M2N_ui},
	{"ui2", __M2N_ui2},
	{"ui4", __M2N_ui4},
	{"ui4i4", __M2N_ui4i4},
	{"ui4i4i4u2i4", __M2N_ui4i4i4u2i4},
	{"ui4s73", __M2N_ui4s73},
	{"ui4u", __M2N_ui4u},
	{"ui4u1", __M2N_ui4u1},
	{"ui4uu", __M2N_ui4uu},
	{"ui8uu", __M2N_ui8uu},
	{"uiiu", __M2N_uiiu},
	{"ur4", __M2N_ur4},
	{"ur4uu", __M2N_ur4uu},
	{"ur8uu", __M2N_ur8uu},
	{"us13", __M2N_us13},
	{"us19", __M2N_us19},
	{"us19uu", __M2N_us19uu},
	{"us1i4", __M2N_us1i4},
	{"us20s20s25s26s26", __M2N_us20s20s25s26s26},
	{"us39", __M2N_us39},
	{"us39r4", __M2N_us39r4},
	{"us39r4i4", __M2N_us39r4i4},
	{"us39r4i4i4", __M2N_us39r4i4i4},
	{"us57", __M2N_us57},
	{"us57s57", __M2N_us57s57},
	{"us59s59uu1", __M2N_us59s59uu1},
	{"us5u1", __M2N_us5u1},
	{"us61s61", __M2N_us61s61},
	{"us61s61r4", __M2N_us61s61r4},
	{"us61s61r4i4", __M2N_us61s61r4i4},
	{"us61s61r4i4i4", __M2N_us61s61r4i4i4},
	{"us70", __M2N_us70},
	{"us71", __M2N_us71},
	{"us73", __M2N_us73},
	{"us73s73", __M2N_us73s73},
	{"uu", __M2N_uu},
	{"uu1", __M2N_uu1},
	{"uu2", __M2N_uu2},
	{"uu2u", __M2N_uu2u},
	{"uu4uu", __M2N_uu4uu},
	{"uu8uu", __M2N_uu8uu},
	{"uui", __M2N_uui},
	{"uui1", __M2N_uui1},
	{"uui1uu", __M2N_uui1uu},
	{"uui2", __M2N_uui2},
	{"uui2uu", __M2N_uui2uu},
	{"uui4", __M2N_uui4},
	{"uui4i4", __M2N_uui4i4},
	{"uui4i4i4", __M2N_uui4i4i4},
	{"uui4i4u", __M2N_uui4i4u},
	{"uui4i4uu", __M2N_uui4i4uu},
	{"uui4i8i8u1uu", __M2N_uui4i8i8u1uu},
	{"uui4i8uu", __M2N_uui4i8uu},
	{"uui4iuu", __M2N_uui4iuu},
	{"uui4s73", __M2N_uui4s73},
	{"uui4u", __M2N_uui4u},
	{"uui4u2", __M2N_uui4u2},
	{"uui4ui4", __M2N_uui4ui4},
	{"uui4ui4uu", __M2N_uui4ui4uu},
	{"uui4uu", __M2N_uui4uu},
	{"uui4uuu", __M2N_uui4uuu},
	{"uui4uuuu", __M2N_uui4uuuu},
	{"uui4uuuuuu", __M2N_uui4uuuuuu},
	{"uui8", __M2N_uui8},
	{"uui8i8", __M2N_uui8i8},
	{"uui8i8i8", __M2N_uui8i8i8},
	{"uui8u", __M2N_uui8u},
	{"uui8uu", __M2N_uui8uu},
	{"uuiuu", __M2N_uuiuu},
	{"uur4", __M2N_uur4},
	{"uur4u", __M2N_uur4u},
	{"uur4uu", __M2N_uur4uu},
	{"uur8", __M2N_uur8},
	{"uur8u", __M2N_uur8u},
	{"uur8uu", __M2N_uur8uu},
	{"uus0", __M2N_uus0},
	{"uus0uu", __M2N_uus0uu},
	{"uus1", __M2N_uus1},
	{"uus106uu", __M2N_uus106uu},
	{"uus108uu", __M2N_uus108uu},
	{"uus110", __M2N_uus110},
	{"uus110uu", __M2N_uus110uu},
	{"uus112uu", __M2N_uus112uu},
	{"uus116uu", __M2N_uus116uu},
	{"uus117uu", __M2N_uus117uu},
	{"uus117uuu", __M2N_uus117uuu},
	{"uus13", __M2N_uus13},
	{"uus13uu", __M2N_uus13uu},
	{"uus15s15uu", __M2N_uus15s15uu},
	{"uus15uu", __M2N_uus15uu},
	{"uus19", __M2N_uus19},
	{"uus19u", __M2N_uus19u},
	{"uus19uu", __M2N_uus19uu},
	{"uus1u", __M2N_uus1u},
	{"uus1uu", __M2N_uus1uu},
	{"uus20", __M2N_uus20},
	{"uus20uu", __M2N_uus20uu},
	{"uus21", __M2N_uus21},
	{"uus21uu", __M2N_uus21uu},
	{"uus25", __M2N_uus25},
	{"uus25uu", __M2N_uus25uu},
	{"uus25uuuu", __M2N_uus25uuuu},
	{"uus25uuuuu1", __M2N_uus25uuuuu1},
	{"uus2s2uu", __M2N_uus2s2uu},
	{"uus4", __M2N_uus4},
	{"uus46i4uu", __M2N_uus46i4uu},
	{"uus46s46uu", __M2N_uus46s46uu},
	{"uus46uu", __M2N_uus46uu},
	{"uus48uuu", __M2N_uus48uuu},
	{"uus4uu", __M2N_uus4uu},
	{"uus5", __M2N_uus5},
	{"uus5s5uu", __M2N_uus5s5uu},
	{"uus5uu", __M2N_uus5uu},
	{"uus66uu", __M2N_uus66uu},
	{"uus68uu", __M2N_uus68uu},
	{"uus7s7uu", __M2N_uus7s7uu},
	{"uus7uu", __M2N_uus7uu},
	{"uus9s9uu", __M2N_uus9s9uu},
	{"uus9uu", __M2N_uus9uu},
	{"uuu", __M2N_uuu},
	{"uuu1", __M2N_uuu1},
	{"uuu1i4i4i4ui4i4i4i4u1u", __M2N_uuu1i4i4i4ui4i4i4i4u1u},
	{"uuu1u1", __M2N_uuu1u1},
	{"uuu1u1i4uu", __M2N_uuu1u1i4uu},
	{"uuu1u1uu", __M2N_uuu1u1uu},
	{"uuu1uu", __M2N_uuu1uu},
	{"uuu2", __M2N_uuu2},
	{"uuu2i4", __M2N_uuu2i4},
	{"uuu2u2", __M2N_uuu2u2},
	{"uuu2uu", __M2N_uuu2uu},
	{"uuu2uuu", __M2N_uuu2uuu},
	{"uuu4", __M2N_uuu4},
	{"uuu4u", __M2N_uuu4u},
	{"uuu4uu", __M2N_uuu4uu},
	{"uuu8", __M2N_uuu8},
	{"uuu8u", __M2N_uuu8u},
	{"uuu8u8uu", __M2N_uuu8u8uu},
	{"uuu8uu", __M2N_uuu8uu},
	{"uuui4", __M2N_uuui4},
	{"uuui4i4", __M2N_uuui4i4},
	{"uuui4i4i4", __M2N_uuui4i4i4},
	{"uuui4i4uu", __M2N_uuui4i4uu},
	{"uuui4i4uu1uuu", __M2N_uuui4i4uu1uuu},
	{"uuui4u1i8i8uuuu", __M2N_uuui4u1i8i8uuuu},
	{"uuui4ui4uu", __M2N_uuui4ui4uu},
	{"uuui4uu", __M2N_uuui4uu},
	{"uuui4uuu", __M2N_uuui4uuu},
	{"uuui4uuuu", __M2N_uuui4uuuu},
	{"uuui4uuuuuu", __M2N_uuui4uuuuuu},
	{"uuui8uu", __M2N_uuui8uu},
	{"uuur4i4r4i4uu", __M2N_uuur4i4r4i4uu},
	{"uuur4r4uu", __M2N_uuur4r4uu},
	{"uuur8uu", __M2N_uuur8uu},
	{"uuus0u", __M2N_uuus0u},
	{"uuus115uu", __M2N_uuus115uu},
	{"uuus19u1uu", __M2N_uuus19u1uu},
	{"uuus27uu", __M2N_uuus27uu},
	{"uuuu", __M2N_uuuu},
	{"uuuu1", __M2N_uuuu1},
	{"uuuu1s109uu", __M2N_uuuu1s109uu},
	{"uuuu1u1", __M2N_uuuu1u1},
	{"uuuu1uu", __M2N_uuuu1uu},
	{"uuuu4uu", __M2N_uuuu4uu},
	{"uuuui4", __M2N_uuuui4},
	{"uuuui4i4", __M2N_uuuui4i4},
	{"uuuui4uu", __M2N_uuuui4uu},
	{"uuuus0u", __M2N_uuuus0u},
	{"uuuus19u1uu", __M2N_uuuus19u1uu},
	{"uuuus25u1", __M2N_uuuus25u1},
	{"uuuus73i4u", __M2N_uuuus73i4u},
	{"uuuuu", __M2N_uuuuu},
	{"uuuuu1", __M2N_uuuuu1},
	{"uuuuu1u1", __M2N_uuuuu1u1},
	{"uuuuu1u1u", __M2N_uuuuu1u1u},
	{"uuuuu1uu", __M2N_uuuuu1uu},
	{"uuuuui4", __M2N_uuuuui4},
	{"uuuuuu", __M2N_uuuuuu},
	{"uuuuuuu", __M2N_uuuuuuu},
	{"uuuuuuuu", __M2N_uuuuuuuu},
	{"v", __M2N_v},
	{"vi", __M2N_vi},
	{"vi4", __M2N_vi4},
	{"vi4i4uuu", __M2N_vi4i4uuu},
	{"vi4uu", __M2N_vi4uu},
	{"vi4uui4i4", __M2N_vi4uui4i4},
	{"vi8", __M2N_vi8},
	{"vii4i", __M2N_vii4i},
	{"viiu", __M2N_viiu},
	{"viui4i4", __M2N_viui4i4},
	{"viuu1", __M2N_viuu1},
	{"vs1", __M2N_vs1},
	{"vs25", __M2N_vs25},
	{"vs40uu", __M2N_vs40uu},
	{"vs45", __M2N_vs45},
	{"vs61s61", __M2N_vs61s61},
	{"vs61s61s40", __M2N_vs61s61s40},
	{"vs61s61s40r4", __M2N_vs61s61s40r4},
	{"vs61s61s40r4u1", __M2N_vs61s61s40r4u1},
	{"vtypedbyrefu", __M2N_vtypedbyrefu},
	{"vu", __M2N_vu},
	{"vu1", __M2N_vu1},
	{"vu1u", __M2N_vu1u},
	{"vu1uu", __M2N_vu1uu},
	{"vu1uuu", __M2N_vu1uuu},
	{"vui", __M2N_vui},
	{"vui1", __M2N_vui1},
	{"vui2", __M2N_vui2},
	{"vui4", __M2N_vui4},
	{"vui4i4", __M2N_vui4i4},
	{"vui4i4i4", __M2N_vui4i4i4},
	{"vui4i4i4i4", __M2N_vui4i4i4i4},
	{"vui4i4i4i4i4", __M2N_vui4i4i4i4i4},
	{"vui4i4i4i4i4i", __M2N_vui4i4i4i4i4i},
	{"vui4i4i4i4i4i4", __M2N_vui4i4i4i4i4i4},
	{"vui4i4i4i4i4i4i4", __M2N_vui4i4i4i4i4i4i4},
	{"vui4i4i4i4i4u1", __M2N_vui4i4i4i4i4u1},
	{"vui4i4i4i4u1", __M2N_vui4i4i4i4u1},
	{"vui4i4i4i4u1i", __M2N_vui4i4i4i4u1i},
	{"vui4i4i4i4u1u1", __M2N_vui4i4i4i4u1u1},
	{"vui4i4i4u", __M2N_vui4i4i4u},
	{"vui4i4i4u1", __M2N_vui4i4i4u1},
	{"vui4i4i4u1u1", __M2N_vui4i4i4u1u1},
	{"vui4i4u", __M2N_vui4i4u},
	{"vui4i4u1", __M2N_vui4i4u1},
	{"vui4i4u1u", __M2N_vui4i4u1u},
	{"vui4i4uuu", __M2N_vui4i4uuu},
	{"vui4i8", __M2N_vui4i8},
	{"vui4i8i8u1", __M2N_vui4i8i8u1},
	{"vui4r4", __M2N_vui4r4},
	{"vui4r4u", __M2N_vui4r4u},
	{"vui4r4uu", __M2N_vui4r4uu},
	{"vui4s141", __M2N_vui4s141},
	{"vui4s15", __M2N_vui4s15},
	{"vui4s4", __M2N_vui4s4},
	{"vui4s5", __M2N_vui4s5},
	{"vui4s7", __M2N_vui4s7},
	{"vui4s9", __M2N_vui4s9},
	{"vui4u", __M2N_vui4u},
	{"vui4u1", __M2N_vui4u1},
	{"vui4u1u", __M2N_vui4u1u},
	{"vui4u1u1i8", __M2N_vui4u1u1i8},
	{"vui4u1u1u1u1i4i8", __M2N_vui4u1u1u1u1i4i8},
	{"vui4u2", __M2N_vui4u2},
	{"vui4u8", __M2N_vui4u8},
	{"vui4ui4i4", __M2N_vui4ui4i4},
	{"vui4ui4u", __M2N_vui4ui4u},
	{"vui4uu", __M2N_vui4uu},
	{"vui4uuu", __M2N_vui4uuu},
	{"vui4uuuuu", __M2N_vui4uuuuu},
	{"vui8", __M2N_vui8},
	{"vui8i4", __M2N_vui8i4},
	{"vui8s25", __M2N_vui8s25},
	{"vui8ui8", __M2N_vui8ui8},
	{"vui8ui8i8", __M2N_vui8ui8i8},
	{"vui8uu", __M2N_vui8uu},
	{"vuiu1", __M2N_vuiu1},
	{"vur4", __M2N_vur4},
	{"vur4i4r4i4i", __M2N_vur4i4r4i4i},
	{"vur4r4", __M2N_vur4r4},
	{"vur4r4i", __M2N_vur4r4i},
	{"vur4r4r4", __M2N_vur4r4r4},
	{"vur4r4r4r4", __M2N_vur4r4r4r4},
	{"vur4r4r4r4u", __M2N_vur4r4r4r4u},
	{"vur8", __M2N_vur8},
	{"vus0", __M2N_vus0},
	{"vus1", __M2N_vus1},
	{"vus10", __M2N_vus10},
	{"vus106", __M2N_vus106},
	{"vus108", __M2N_vus108},
	{"vus112", __M2N_vus112},
	{"vus116", __M2N_vus116},
	{"vus117", __M2N_vus117},
	{"vus117u", __M2N_vus117u},
	{"vus143", __M2N_vus143},
	{"vus144i4", __M2N_vus144i4},
	{"vus145", __M2N_vus145},
	{"vus148", __M2N_vus148},
	{"vus15", __M2N_vus15},
	{"vus18", __M2N_vus18},
	{"vus1i4", __M2N_vus1i4},
	{"vus1i4i4u", __M2N_vus1i4i4u},
	{"vus1u", __M2N_vus1u},
	{"vus1ui4", __M2N_vus1ui4},
	{"vus1ui4u", __M2N_vus1ui4u},
	{"vus1ui8", __M2N_vus1ui8},
	{"vus2", __M2N_vus2},
	{"vus20u", __M2N_vus20u},
	{"vus25", __M2N_vus25},
	{"vus27", __M2N_vus27},
	{"vus3", __M2N_vus3},
	{"vus4", __M2N_vus4},
	{"vus40", __M2N_vus40},
	{"vus40s40s40s40", __M2N_vus40s40s40s40},
	{"vus40uu1u1u1u1", __M2N_vus40uu1u1u1u1},
	{"vus45", __M2N_vus45},
	{"vus46", __M2N_vus46},
	{"vus46i4", __M2N_vus46i4},
	{"vus46s46", __M2N_vus46s46},
	{"vus48", __M2N_vus48},
	{"vus48s146", __M2N_vus48s146},
	{"vus48s146u", __M2N_vus48s146u},
	{"vus48uu", __M2N_vus48uu},
	{"vus5", __M2N_vus5},
	{"vus57", __M2N_vus57},
	{"vus57u", __M2N_vus57u},
	{"vus57uu", __M2N_vus57uu},
	{"vus59s59", __M2N_vus59s59},
	{"vus5u", __M2N_vus5u},
	{"vus5u1", __M2N_vus5u1},
	{"vus60", __M2N_vus60},
	{"vus60u", __M2N_vus60u},
	{"vus60uu", __M2N_vus60uu},
	{"vus61", __M2N_vus61},
	{"vus61s61", __M2N_vus61s61},
	{"vus61s61r4r4s143", __M2N_vus61s61r4r4s143},
	{"vus66", __M2N_vus66},
	{"vus68", __M2N_vus68},
	{"vus7", __M2N_vus7},
	{"vus73i4i4u", __M2N_vus73i4i4u},
	{"vus74", __M2N_vus74},
	{"vus8", __M2N_vus8},
	{"vus9", __M2N_vus9},
	{"vutypedbyrefu", __M2N_vutypedbyrefu},
	{"vuu", __M2N_vuu},
	{"vuu1", __M2N_vuu1},
	{"vuu1i4", __M2N_vuu1i4},
	{"vuu1i4i4s73", __M2N_vuu1i4i4s73},
	{"vuu1i4u", __M2N_vuu1i4u},
	{"vuu1s74i4s73", __M2N_vuu1s74i4s73},
	{"vuu1u", __M2N_vuu1u},
	{"vuu1u1", __M2N_vuu1u1},
	{"vuu1u1i4", __M2N_vuu1u1i4},
	{"vuu1u1i4s73", __M2N_vuu1u1i4s73},
	{"vuu1u1i4u1", __M2N_vuu1u1i4u1},
	{"vuu1u1u1", __M2N_vuu1u1u1},
	{"vuu1u1u4u4u4", __M2N_vuu1u1u4u4u4},
	{"vuu1ui4s73", __M2N_vuu1ui4s73},
	{"vuu1uu1u1", __M2N_vuu1uu1u1},
	{"vuu1uuu", __M2N_vuu1uuu},
	{"vuu1uuuui4i4u", __M2N_vuu1uuuui4i4u},
	{"vuu2", __M2N_vuu2},
	{"vuu2i4", __M2N_vuu2i4},
	{"vuu2i4i4i4i4i4i4i4", __M2N_vuu2i4i4i4i4i4i4i4},
	{"vuu2i4u1u1u1", __M2N_vuu2i4u1u1u1},
	{"vuu2u", __M2N_vuu2u},
	{"vuu4", __M2N_vuu4},
	{"vuu4u2u2u1u1u1u1u1u1u1u1", __M2N_vuu4u2u2u1u1u1u1u1u1u1u1},
	{"vuu8", __M2N_vuu8},
	{"vuu8u", __M2N_vuu8u},
	{"vuui", __M2N_vuui},
	{"vuui2", __M2N_vuui2},
	{"vuui4", __M2N_vuui4},
	{"vuui4i4", __M2N_vuui4i4},
	{"vuui4i4i4", __M2N_vuui4i4i4},
	{"vuui4i4i4i4", __M2N_vuui4i4i4i4},
	{"vuui4i4i4u", __M2N_vuui4i4i4u},
	{"vuui4i4i8i4", __M2N_vuui4i4i8i4},
	{"vuui4i4u", __M2N_vuui4i4u},
	{"vuui4i4u1", __M2N_vuui4i4u1},
	{"vuui4s48", __M2N_vuui4s48},
	{"vuui4u", __M2N_vuui4u},
	{"vuui4u1", __M2N_vuui4u1},
	{"vuui4u1i8i8uu", __M2N_vuui4u1i8i8uu},
	{"vuui8", __M2N_vuui8},
	{"vuui8i8", __M2N_vuui8i8},
	{"vuui8i8i8", __M2N_vuui8i8i8},
	{"vuui8u", __M2N_vuui8u},
	{"vuui8ui8uu", __M2N_vuui8ui8uu},
	{"vuui8us1i4", __M2N_vuui8us1i4},
	{"vuuiu", __M2N_vuuiu},
	{"vuur4", __M2N_vuur4},
	{"vuur4r4", __M2N_vuur4r4},
	{"vuur8", __M2N_vuur8},
	{"vuus0", __M2N_vuus0},
	{"vuus149i4", __M2N_vuus149i4},
	{"vuus149i4s48", __M2N_vuus149i4s48},
	{"vuus19u1", __M2N_vuus19u1},
	{"vuus1uui4", __M2N_vuus1uui4},
	{"vuus20", __M2N_vuus20},
	{"vuus27", __M2N_vuus27},
	{"vuus73", __M2N_vuus73},
	{"vuuu", __M2N_vuuu},
	{"vuuu1", __M2N_vuuu1},
	{"vuuu1i4", __M2N_vuuu1i4},
	{"vuuu1s109", __M2N_vuuu1s109},
	{"vuuu1u", __M2N_vuuu1u},
	{"vuuu1u1", __M2N_vuuu1u1},
	{"vuuu1ui4", __M2N_vuuu1ui4},
	{"vuuu1uu", __M2N_vuuu1uu},
	{"vuuu2", __M2N_vuuu2},
	{"vuuu4", __M2N_vuuu4},
	{"vuuu8", __M2N_vuuu8},
	{"vuuui4", __M2N_vuuui4},
	{"vuuui4i4", __M2N_vuuui4i4},
	{"vuuui4i4u", __M2N_vuuui4i4u},
	{"vuuui4u", __M2N_vuuui4u},
	{"vuuui4u1", __M2N_vuuui4u1},
	{"vuuui4uu", __M2N_vuuui4uu},
	{"vuuui4uui4", __M2N_vuuui4uui4},
	{"vuuui4uuu", __M2N_vuuui4uuu},
	{"vuuur4", __M2N_vuuur4},
	{"vuuus0", __M2N_vuuus0},
	{"vuuus19u1", __M2N_vuuus19u1},
	{"vuuus25s25", __M2N_vuuus25s25},
	{"vuuus73i4", __M2N_vuuus73i4},
	{"vuuuu", __M2N_vuuuu},
	{"vuuuu1", __M2N_vuuuu1},
	{"vuuuu1i4", __M2N_vuuuu1i4},
	{"vuuuu1i4u1", __M2N_vuuuu1i4u1},
	{"vuuuui4", __M2N_vuuuui4},
	{"vuuuui4i4u", __M2N_vuuuui4i4u},
	{"vuuuui4uu1", __M2N_vuuuui4uu1},
	{"vuuuus73i4i4u", __M2N_vuuuus73i4i4u},
	{"vuuuuu", __M2N_vuuuuu},
	{"vuuuuui4u", __M2N_vuuuuui4u},
	{"vuuuuui4uu1", __M2N_vuuuuui4uu1},
	{"vuuuuuu", __M2N_vuuuuuu},
	{nullptr, nullptr},
};

static int8_t __N2M_i1i(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1i1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1i2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1r4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1r8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1s110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1s13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1s19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1s20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1s25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1s4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1u1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1u2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1u4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1u8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1us13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2i(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2i1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2i2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2r4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2r8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2s110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2s13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2s19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2s20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2s25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2s4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2u1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2u2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2u4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2u8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2us13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4i(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4i1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4i2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4i4i4(int32_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4r4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4r8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s15s15(__struct_15__ __arg0, __struct_15__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_15__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s2s2(__struct_2__ __arg0, __struct_2__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_2__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_2__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s5s5(__struct_5__ __arg0, __struct_5__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_5__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s7s7(__struct_7__ __arg0, __struct_7__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_7__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s9s9(__struct_9__ __arg0, __struct_9__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_9__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u1u1(uint8_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u8u8(uint64_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui4i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us13s13(uintptr_t __arg0, __struct_13__ __arg1, __struct_13__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_13__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us15(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us15s15(uintptr_t __arg0, __struct_15__ __arg1, __struct_15__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_15__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us2s2(uintptr_t __arg0, __struct_2__ __arg1, __struct_2__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_2__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_2__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us5(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us5s5(uintptr_t __arg0, __struct_5__ __arg1, __struct_5__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_5__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us7(uintptr_t __arg0, __struct_7__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us7s7(uintptr_t __arg0, __struct_7__ __arg1, __struct_7__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_7__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us9(uintptr_t __arg0, __struct_9__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us9s9(uintptr_t __arg0, __struct_9__ __arg1, __struct_9__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_9__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu1u1(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu8u8(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4ui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4ui4i4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(int32_t*)(args + __ARG_OFFSET_7__) = __arg7;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4ui4u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, uint8_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	args[__ARG_OFFSET_6__].u64 = __arg6;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4ui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4ui4u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	args[__ARG_OFFSET_5__].u64 = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus0i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus13i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_13__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_13__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus15i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_15__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_15__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus1i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_1__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_1__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus5i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_5__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_5__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus7i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_7__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_7__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus9i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_9__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_9__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuu1i4i4(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuu8i4i4(uintptr_t __arg0, uintptr_t __arg1, uint64_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4i4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8i(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8i1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8i2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8r4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8r8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8s110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8s13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8s19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8s20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8s25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8s4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8u1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8u2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8u4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8u8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ui8i4(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8us13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static intptr_t __N2M_iuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    intptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4ur4r4(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4uur4r4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static double __N2M_r8u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    double ret; Interpreter::Execute(method, args, &ret); return ret;
}


static double __N2M_r8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    double ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_0__ __N2M_s0u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_0__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_0__ __N2M_s0uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_0__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_10__ __N2M_s10u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_10__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_141__ __N2M_s141u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_141__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_155__ __N2M_s155us115(uintptr_t __arg0, __struct_115__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_115__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_155__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_155__ __N2M_s155uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_155__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_155__ __N2M_s155uus115(uintptr_t __arg0, uintptr_t __arg1, __struct_115__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_115__*)(args + __ARG_OFFSET_2__) = __arg2;

    __struct_155__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_15__ __N2M_s15u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_15__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_15__ __N2M_s15ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_15__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_18__ __N2M_s18uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    __struct_18__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_19__ __N2M_s19u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_19__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_19__ __N2M_s19uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_19__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_1__ __N2M_s1u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_1__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_20__ __N2M_s20u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_20__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_20__ __N2M_s20ui4i4i4i4i4i4i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(int32_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(int32_t*)(args + __ARG_OFFSET_8__) = __arg8;

    __struct_20__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_20__ __N2M_s20uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_20__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_25__ __N2M_s25u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_25__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_25__ __N2M_s25us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_25__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_25__ __N2M_s25uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_25__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_2__ __N2M_s2u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_2__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_3__ __N2M_s3u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_3__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_48__ __N2M_s48s48u(__struct_48__ __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_48__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_48__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_48__ __N2M_s48u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_48__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_48__ __N2M_s48us48u(uintptr_t __arg0, __struct_48__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    __struct_48__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_48__ __N2M_s48uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_48__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_4__ __N2M_s4u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_4__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_4__ __N2M_s4ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_4__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_57__ __N2M_s57u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_57__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_59__ __N2M_s59ur4i4r4i4(uintptr_t __arg0, float __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    __struct_59__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_59__ __N2M_s59uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_59__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_59__ __N2M_s59uur4i4r4i4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    __struct_59__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_5__ __N2M_s5u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_5__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_5__ __N2M_s5ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_5__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_71__ __N2M_s71u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_71__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_74__ __N2M_s74(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    __struct_74__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_74__ __N2M_s74u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_74__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_74__ __N2M_s74uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_74__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_7__ __N2M_s7u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_7__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_7__ __N2M_s7ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_7__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_8__ __N2M_s8u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_8__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_9__ __N2M_s9u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_9__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_9__ __N2M_s9ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_9__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_u(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i4i(int32_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1r4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1r8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s15(__struct_15__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_15__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s5(__struct_5__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_5__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s7(__struct_7__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_7__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s9(__struct_9__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_9__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1u1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1u2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1u4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1u8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4i(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4u1(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us0s0(uintptr_t __arg0, __struct_0__ __arg1, __struct_0__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us10(uintptr_t __arg0, __struct_10__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_10__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us13s13(uintptr_t __arg0, __struct_13__ __arg1, __struct_13__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_13__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us15(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us15s15(uintptr_t __arg0, __struct_15__ __arg1, __struct_15__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_15__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us1s1(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_1__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us1u(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us1ui4(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us2(uintptr_t __arg0, __struct_2__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_2__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us26(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_26__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us27(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us3(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_3__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us39(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_39__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us40(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us45(uintptr_t __arg0, __struct_45__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_45__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us46(uintptr_t __arg0, __struct_46__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us48(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us5(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us55(uintptr_t __arg0, __struct_55__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_55__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us56(uintptr_t __arg0, __struct_56__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_56__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us57(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_57__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us59(uintptr_t __arg0, __struct_59__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_59__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us5s5(uintptr_t __arg0, __struct_5__ __arg1, __struct_5__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_5__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us5u(uintptr_t __arg0, __struct_5__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us60(uintptr_t __arg0, __struct_60__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_60__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us60uu(uintptr_t __arg0, __struct_60__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_60__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us61(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_61__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us63(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us66(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us67(uintptr_t __arg0, __struct_67__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_67__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us68(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us69(uintptr_t __arg0, __struct_69__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_69__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us7(uintptr_t __arg0, __struct_7__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us7s7(uintptr_t __arg0, __struct_7__ __arg1, __struct_7__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_7__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us8(uintptr_t __arg0, __struct_8__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_8__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us9(uintptr_t __arg0, __struct_9__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us9s9(uintptr_t __arg0, __struct_9__ __arg1, __struct_9__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_9__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu1u1(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu2i4(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu2u2i4(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu8u(uintptr_t __arg0, uint64_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu8u8(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uui4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2i(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2i1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2i2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2r4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2r8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2s110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2s13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2s19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2s20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2s25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2s4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2u1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2u2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2u4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2u8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2us13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4i(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4i1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4i2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4r4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4r8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4s110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4s13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4s19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4s20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4s25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4s4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4u1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4u2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4u4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4u8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4us13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8i(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8i1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8i2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8r4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8r8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8s110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8s13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8s19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8s20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8s25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8s4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8u1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8u2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8u4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8u8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8us13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_ui(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_ui1(int8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_ui2(int16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_ui4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_ui8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_ur4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_ur8(double __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(double*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us110(__struct_110__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_110__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us13(__struct_13__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_13__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us19(__struct_19__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_19__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us20(__struct_20__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_20__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us25(__struct_25__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_25__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us4(__struct_4__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_4__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uu(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uu1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uu2(uint16_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uu4(uint32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uu8(uint64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui1uu(uintptr_t __arg0, int8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui2uu(uintptr_t __arg0, int16_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4i4uu(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4i8i8u1uu(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, int64_t __arg3, uint8_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4i8uu(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4iuu(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4ui4uu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4uu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4uuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4uuuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4uuuuuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui8uu(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuiuu(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uur4uu(uintptr_t __arg0, float __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uur8uu(uintptr_t __arg0, double __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus0uu(uintptr_t __arg0, __struct_0__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus106uu(uintptr_t __arg0, __struct_106__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_106__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus108uu(uintptr_t __arg0, __struct_108__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_108__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus110uu(uintptr_t __arg0, __struct_110__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus112uu(uintptr_t __arg0, __struct_112__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_112__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus116uu(uintptr_t __arg0, __struct_116__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_116__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus117uu(uintptr_t __arg0, __struct_117__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_117__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus117uuu(uintptr_t __arg0, __struct_117__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_117__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus13(uintptr_t __arg0, __struct_13__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus13uu(uintptr_t __arg0, __struct_13__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_13__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus15s15uu(uintptr_t __arg0, __struct_15__ __arg1, __struct_15__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_15__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus15uu(uintptr_t __arg0, __struct_15__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus19uu(uintptr_t __arg0, __struct_19__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus1uu(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus20uu(uintptr_t __arg0, __struct_20__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus21uu(uintptr_t __arg0, __struct_21__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus25uu(uintptr_t __arg0, __struct_25__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus2s2uu(uintptr_t __arg0, __struct_2__ __arg1, __struct_2__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_2__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_2__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus46i4uu(uintptr_t __arg0, __struct_46__ __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus46s46uu(uintptr_t __arg0, __struct_46__ __arg1, __struct_46__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_46__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus46uu(uintptr_t __arg0, __struct_46__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus48uuu(uintptr_t __arg0, __struct_48__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus4uu(uintptr_t __arg0, __struct_4__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus5(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus5s5uu(uintptr_t __arg0, __struct_5__ __arg1, __struct_5__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_5__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus5uu(uintptr_t __arg0, __struct_5__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus66uu(uintptr_t __arg0, __struct_66__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus68uu(uintptr_t __arg0, __struct_68__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus7s7uu(uintptr_t __arg0, __struct_7__ __arg1, __struct_7__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_7__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus7uu(uintptr_t __arg0, __struct_7__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus9s9uu(uintptr_t __arg0, __struct_9__ __arg1, __struct_9__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_9__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus9uu(uintptr_t __arg0, __struct_9__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu1u1i4uu(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu1u1uu(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu1uu(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu2uu(uintptr_t __arg0, uint16_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu2uuu(uintptr_t __arg0, uint16_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu4uu(uintptr_t __arg0, uint32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu8u8uu(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu8uu(uintptr_t __arg0, uint64_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4i4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4u1i8i8uuuu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, int64_t __arg4, int64_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(int64_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int64_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4ui4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4uuu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4uuuu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4uuuuuu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui8uu(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuur4i4r4i4uu(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuur4r4uu(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuur8uu(uintptr_t __arg0, uintptr_t __arg1, double __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(double*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus0u(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus115uu(uintptr_t __arg0, uintptr_t __arg1, __struct_115__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_115__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus19u1uu(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, uint8_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_19__*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus27uu(uintptr_t __arg0, uintptr_t __arg1, __struct_27__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_27__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1s109uu(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, __struct_109__ __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(__struct_109__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1u1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1uu(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu4uu(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui4uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuus0u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_0__ __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_0__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuus19u1uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_19__ __arg3, uint8_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_19__*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuu1u1u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuu1uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static void __N2M_v(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4i8(int32_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4i8i8u1(int32_t __arg0, int64_t __arg1, int64_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4u(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vr4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs0(__struct_0__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_0__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs106(__struct_106__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_106__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs108(__struct_108__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_108__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs112(__struct_112__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_112__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs116(__struct_116__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_116__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs117(__struct_117__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_117__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs117u(__struct_117__ __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_117__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs46(__struct_46__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_46__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs46i4(__struct_46__ __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_46__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs46s46(__struct_46__ __arg0, __struct_46__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_46__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs66(__struct_66__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_66__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs68(__struct_68__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_68__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs7(__struct_7__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_7__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vu(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vu1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vu1u1i4(uint8_t __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vu2u(uint16_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i8(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i8i8u1(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, int64_t __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s15(uintptr_t __arg0, int32_t __arg1, __struct_15__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_15__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s4(uintptr_t __arg0, int32_t __arg1, __struct_4__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_4__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s5(uintptr_t __arg0, int32_t __arg1, __struct_5__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_5__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s7(uintptr_t __arg0, int32_t __arg1, __struct_7__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_7__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s9(uintptr_t __arg0, int32_t __arg1, __struct_9__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_9__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4u1(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4u1i8i8uu(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, int64_t __arg3, int64_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int64_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4u8(uintptr_t __arg0, int32_t __arg1, uint64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4ui4i4(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4uu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4uuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui8ui8(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, int64_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vur4r4(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus10(uintptr_t __arg0, __struct_10__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_10__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus106(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_106__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus108(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_108__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus112(uintptr_t __arg0, __struct_112__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_112__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus116(uintptr_t __arg0, __struct_116__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_116__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus117(uintptr_t __arg0, __struct_117__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_117__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus117u(uintptr_t __arg0, __struct_117__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_117__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus15(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus19u1(uintptr_t __arg0, __struct_19__ __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus1i4(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus1u(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus1ui4(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus2(uintptr_t __arg0, __struct_2__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_2__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus27(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus3(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_3__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus46(uintptr_t __arg0, __struct_46__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus46i4(uintptr_t __arg0, __struct_46__ __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus46s46(uintptr_t __arg0, __struct_46__ __arg1, __struct_46__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_46__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus48(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus48s146(uintptr_t __arg0, __struct_48__ __arg1, __struct_146__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_146__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus48s146u(uintptr_t __arg0, __struct_48__ __arg1, __struct_146__ __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_146__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus48uu(uintptr_t __arg0, __struct_48__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus5(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus57u(uintptr_t __arg0, __struct_57__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_57__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus57uu(uintptr_t __arg0, __struct_57__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_57__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus5u(uintptr_t __arg0, __struct_5__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus60u(uintptr_t __arg0, __struct_60__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_60__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus60uu(uintptr_t __arg0, __struct_60__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_60__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus66(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus68(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus7(uintptr_t __arg0, __struct_7__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus8(uintptr_t __arg0, __struct_8__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_8__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus9(uintptr_t __arg0, __struct_9__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vutypedbyrefu(uintptr_t __arg0, Il2CppTypedRef __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(Il2CppTypedRef*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1s109(uintptr_t __arg0, uint8_t __arg1, __struct_109__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(__struct_109__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1u1i4(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu2u(uintptr_t __arg0, uint16_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu8u(uintptr_t __arg0, uint64_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4s48(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_48__ __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_48__*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4u1i8i8uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, int64_t __arg4, int64_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(int64_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int64_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui8(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuur8(uintptr_t __arg0, uintptr_t __arg1, double __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(double*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus0(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus149i4(uintptr_t __arg0, uintptr_t __arg1, __struct_149__ __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_149__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus149i4s48(uintptr_t __arg0, uintptr_t __arg1, __struct_149__ __arg2, int32_t __arg3, __struct_48__ __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_149__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(__struct_48__*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus19u1(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_19__*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus27(uintptr_t __arg0, uintptr_t __arg1, __struct_27__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_27__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1s109(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, __struct_109__ __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(__struct_109__*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1u1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu4(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui4uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui4uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuus0(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_0__ __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_0__*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuus19u1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_19__ __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_19__*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


Native2ManagedMethodInfo hybridclr::interpreter::g_native2managedStub[] = 
{

	{"i1i", (Il2CppMethodPointer)__N2M_i1i},
	{"i1i1", (Il2CppMethodPointer)__N2M_i1i1},
	{"i1i2", (Il2CppMethodPointer)__N2M_i1i2},
	{"i1i4", (Il2CppMethodPointer)__N2M_i1i4},
	{"i1i8", (Il2CppMethodPointer)__N2M_i1i8},
	{"i1r4", (Il2CppMethodPointer)__N2M_i1r4},
	{"i1r8", (Il2CppMethodPointer)__N2M_i1r8},
	{"i1s1", (Il2CppMethodPointer)__N2M_i1s1},
	{"i1s110", (Il2CppMethodPointer)__N2M_i1s110},
	{"i1s13", (Il2CppMethodPointer)__N2M_i1s13},
	{"i1s19", (Il2CppMethodPointer)__N2M_i1s19},
	{"i1s20", (Il2CppMethodPointer)__N2M_i1s20},
	{"i1s21", (Il2CppMethodPointer)__N2M_i1s21},
	{"i1s25", (Il2CppMethodPointer)__N2M_i1s25},
	{"i1s4", (Il2CppMethodPointer)__N2M_i1s4},
	{"i1u", (Il2CppMethodPointer)__N2M_i1u},
	{"i1u1", (Il2CppMethodPointer)__N2M_i1u1},
	{"i1u2", (Il2CppMethodPointer)__N2M_i1u2},
	{"i1u4", (Il2CppMethodPointer)__N2M_i1u4},
	{"i1u8", (Il2CppMethodPointer)__N2M_i1u8},
	{"i1ui", (Il2CppMethodPointer)__N2M_i1ui},
	{"i1ui1", (Il2CppMethodPointer)__N2M_i1ui1},
	{"i1ui2", (Il2CppMethodPointer)__N2M_i1ui2},
	{"i1ui4", (Il2CppMethodPointer)__N2M_i1ui4},
	{"i1ui8", (Il2CppMethodPointer)__N2M_i1ui8},
	{"i1ur4", (Il2CppMethodPointer)__N2M_i1ur4},
	{"i1ur8", (Il2CppMethodPointer)__N2M_i1ur8},
	{"i1us1", (Il2CppMethodPointer)__N2M_i1us1},
	{"i1us110", (Il2CppMethodPointer)__N2M_i1us110},
	{"i1us13", (Il2CppMethodPointer)__N2M_i1us13},
	{"i1us19", (Il2CppMethodPointer)__N2M_i1us19},
	{"i1us20", (Il2CppMethodPointer)__N2M_i1us20},
	{"i1us21", (Il2CppMethodPointer)__N2M_i1us21},
	{"i1us25", (Il2CppMethodPointer)__N2M_i1us25},
	{"i1us4", (Il2CppMethodPointer)__N2M_i1us4},
	{"i1uu", (Il2CppMethodPointer)__N2M_i1uu},
	{"i1uu1", (Il2CppMethodPointer)__N2M_i1uu1},
	{"i1uu2", (Il2CppMethodPointer)__N2M_i1uu2},
	{"i1uu4", (Il2CppMethodPointer)__N2M_i1uu4},
	{"i1uu8", (Il2CppMethodPointer)__N2M_i1uu8},
	{"i2i", (Il2CppMethodPointer)__N2M_i2i},
	{"i2i1", (Il2CppMethodPointer)__N2M_i2i1},
	{"i2i2", (Il2CppMethodPointer)__N2M_i2i2},
	{"i2i4", (Il2CppMethodPointer)__N2M_i2i4},
	{"i2i8", (Il2CppMethodPointer)__N2M_i2i8},
	{"i2r4", (Il2CppMethodPointer)__N2M_i2r4},
	{"i2r8", (Il2CppMethodPointer)__N2M_i2r8},
	{"i2s1", (Il2CppMethodPointer)__N2M_i2s1},
	{"i2s110", (Il2CppMethodPointer)__N2M_i2s110},
	{"i2s13", (Il2CppMethodPointer)__N2M_i2s13},
	{"i2s19", (Il2CppMethodPointer)__N2M_i2s19},
	{"i2s20", (Il2CppMethodPointer)__N2M_i2s20},
	{"i2s21", (Il2CppMethodPointer)__N2M_i2s21},
	{"i2s25", (Il2CppMethodPointer)__N2M_i2s25},
	{"i2s4", (Il2CppMethodPointer)__N2M_i2s4},
	{"i2u", (Il2CppMethodPointer)__N2M_i2u},
	{"i2u1", (Il2CppMethodPointer)__N2M_i2u1},
	{"i2u2", (Il2CppMethodPointer)__N2M_i2u2},
	{"i2u4", (Il2CppMethodPointer)__N2M_i2u4},
	{"i2u8", (Il2CppMethodPointer)__N2M_i2u8},
	{"i2ui", (Il2CppMethodPointer)__N2M_i2ui},
	{"i2ui1", (Il2CppMethodPointer)__N2M_i2ui1},
	{"i2ui2", (Il2CppMethodPointer)__N2M_i2ui2},
	{"i2ui4", (Il2CppMethodPointer)__N2M_i2ui4},
	{"i2ui8", (Il2CppMethodPointer)__N2M_i2ui8},
	{"i2ur4", (Il2CppMethodPointer)__N2M_i2ur4},
	{"i2ur8", (Il2CppMethodPointer)__N2M_i2ur8},
	{"i2us1", (Il2CppMethodPointer)__N2M_i2us1},
	{"i2us110", (Il2CppMethodPointer)__N2M_i2us110},
	{"i2us13", (Il2CppMethodPointer)__N2M_i2us13},
	{"i2us19", (Il2CppMethodPointer)__N2M_i2us19},
	{"i2us20", (Il2CppMethodPointer)__N2M_i2us20},
	{"i2us21", (Il2CppMethodPointer)__N2M_i2us21},
	{"i2us25", (Il2CppMethodPointer)__N2M_i2us25},
	{"i2us4", (Il2CppMethodPointer)__N2M_i2us4},
	{"i2uu", (Il2CppMethodPointer)__N2M_i2uu},
	{"i2uu1", (Il2CppMethodPointer)__N2M_i2uu1},
	{"i2uu2", (Il2CppMethodPointer)__N2M_i2uu2},
	{"i2uu4", (Il2CppMethodPointer)__N2M_i2uu4},
	{"i2uu8", (Il2CppMethodPointer)__N2M_i2uu8},
	{"i4", (Il2CppMethodPointer)__N2M_i4},
	{"i4i", (Il2CppMethodPointer)__N2M_i4i},
	{"i4i1", (Il2CppMethodPointer)__N2M_i4i1},
	{"i4i2", (Il2CppMethodPointer)__N2M_i4i2},
	{"i4i4", (Il2CppMethodPointer)__N2M_i4i4},
	{"i4i4i4", (Il2CppMethodPointer)__N2M_i4i4i4},
	{"i4i8", (Il2CppMethodPointer)__N2M_i4i8},
	{"i4r4", (Il2CppMethodPointer)__N2M_i4r4},
	{"i4r8", (Il2CppMethodPointer)__N2M_i4r8},
	{"i4s1", (Il2CppMethodPointer)__N2M_i4s1},
	{"i4s110", (Il2CppMethodPointer)__N2M_i4s110},
	{"i4s13", (Il2CppMethodPointer)__N2M_i4s13},
	{"i4s15s15", (Il2CppMethodPointer)__N2M_i4s15s15},
	{"i4s19", (Il2CppMethodPointer)__N2M_i4s19},
	{"i4s20", (Il2CppMethodPointer)__N2M_i4s20},
	{"i4s21", (Il2CppMethodPointer)__N2M_i4s21},
	{"i4s25", (Il2CppMethodPointer)__N2M_i4s25},
	{"i4s2s2", (Il2CppMethodPointer)__N2M_i4s2s2},
	{"i4s4", (Il2CppMethodPointer)__N2M_i4s4},
	{"i4s5s5", (Il2CppMethodPointer)__N2M_i4s5s5},
	{"i4s7s7", (Il2CppMethodPointer)__N2M_i4s7s7},
	{"i4s9s9", (Il2CppMethodPointer)__N2M_i4s9s9},
	{"i4u", (Il2CppMethodPointer)__N2M_i4u},
	{"i4u1", (Il2CppMethodPointer)__N2M_i4u1},
	{"i4u1u1", (Il2CppMethodPointer)__N2M_i4u1u1},
	{"i4u2", (Il2CppMethodPointer)__N2M_i4u2},
	{"i4u4", (Il2CppMethodPointer)__N2M_i4u4},
	{"i4u8", (Il2CppMethodPointer)__N2M_i4u8},
	{"i4u8u8", (Il2CppMethodPointer)__N2M_i4u8u8},
	{"i4ui", (Il2CppMethodPointer)__N2M_i4ui},
	{"i4ui1", (Il2CppMethodPointer)__N2M_i4ui1},
	{"i4ui2", (Il2CppMethodPointer)__N2M_i4ui2},
	{"i4ui4", (Il2CppMethodPointer)__N2M_i4ui4},
	{"i4ui4i4", (Il2CppMethodPointer)__N2M_i4ui4i4},
	{"i4ui4i4i4", (Il2CppMethodPointer)__N2M_i4ui4i4i4},
	{"i4ui8", (Il2CppMethodPointer)__N2M_i4ui8},
	{"i4ur4", (Il2CppMethodPointer)__N2M_i4ur4},
	{"i4ur8", (Il2CppMethodPointer)__N2M_i4ur8},
	{"i4us0", (Il2CppMethodPointer)__N2M_i4us0},
	{"i4us1", (Il2CppMethodPointer)__N2M_i4us1},
	{"i4us110", (Il2CppMethodPointer)__N2M_i4us110},
	{"i4us13", (Il2CppMethodPointer)__N2M_i4us13},
	{"i4us13s13", (Il2CppMethodPointer)__N2M_i4us13s13},
	{"i4us15", (Il2CppMethodPointer)__N2M_i4us15},
	{"i4us15s15", (Il2CppMethodPointer)__N2M_i4us15s15},
	{"i4us19", (Il2CppMethodPointer)__N2M_i4us19},
	{"i4us20", (Il2CppMethodPointer)__N2M_i4us20},
	{"i4us21", (Il2CppMethodPointer)__N2M_i4us21},
	{"i4us25", (Il2CppMethodPointer)__N2M_i4us25},
	{"i4us2s2", (Il2CppMethodPointer)__N2M_i4us2s2},
	{"i4us4", (Il2CppMethodPointer)__N2M_i4us4},
	{"i4us5", (Il2CppMethodPointer)__N2M_i4us5},
	{"i4us5s5", (Il2CppMethodPointer)__N2M_i4us5s5},
	{"i4us7", (Il2CppMethodPointer)__N2M_i4us7},
	{"i4us7s7", (Il2CppMethodPointer)__N2M_i4us7s7},
	{"i4us9", (Il2CppMethodPointer)__N2M_i4us9},
	{"i4us9s9", (Il2CppMethodPointer)__N2M_i4us9s9},
	{"i4uu", (Il2CppMethodPointer)__N2M_i4uu},
	{"i4uu1", (Il2CppMethodPointer)__N2M_i4uu1},
	{"i4uu1u1", (Il2CppMethodPointer)__N2M_i4uu1u1},
	{"i4uu2", (Il2CppMethodPointer)__N2M_i4uu2},
	{"i4uu4", (Il2CppMethodPointer)__N2M_i4uu4},
	{"i4uu8", (Il2CppMethodPointer)__N2M_i4uu8},
	{"i4uu8u8", (Il2CppMethodPointer)__N2M_i4uu8u8},
	{"i4uui4", (Il2CppMethodPointer)__N2M_i4uui4},
	{"i4uui4i4", (Il2CppMethodPointer)__N2M_i4uui4i4},
	{"i4uui4i4i4", (Il2CppMethodPointer)__N2M_i4uui4i4i4},
	{"i4uui4i4u1", (Il2CppMethodPointer)__N2M_i4uui4i4u1},
	{"i4uui4i4ui4", (Il2CppMethodPointer)__N2M_i4uui4i4ui4},
	{"i4uui4i4ui4i4i4", (Il2CppMethodPointer)__N2M_i4uui4i4ui4i4i4},
	{"i4uui4i4ui4u1", (Il2CppMethodPointer)__N2M_i4uui4i4ui4u1},
	{"i4uui4u1", (Il2CppMethodPointer)__N2M_i4uui4u1},
	{"i4uui4ui4", (Il2CppMethodPointer)__N2M_i4uui4ui4},
	{"i4uui4ui4u1", (Il2CppMethodPointer)__N2M_i4uui4ui4u1},
	{"i4uus0i4i4", (Il2CppMethodPointer)__N2M_i4uus0i4i4},
	{"i4uus13i4i4", (Il2CppMethodPointer)__N2M_i4uus13i4i4},
	{"i4uus15i4i4", (Il2CppMethodPointer)__N2M_i4uus15i4i4},
	{"i4uus1i4i4", (Il2CppMethodPointer)__N2M_i4uus1i4i4},
	{"i4uus5i4i4", (Il2CppMethodPointer)__N2M_i4uus5i4i4},
	{"i4uus7i4i4", (Il2CppMethodPointer)__N2M_i4uus7i4i4},
	{"i4uus9i4i4", (Il2CppMethodPointer)__N2M_i4uus9i4i4},
	{"i4uuu", (Il2CppMethodPointer)__N2M_i4uuu},
	{"i4uuu1i4i4", (Il2CppMethodPointer)__N2M_i4uuu1i4i4},
	{"i4uuu8i4i4", (Il2CppMethodPointer)__N2M_i4uuu8i4i4},
	{"i4uuui4", (Il2CppMethodPointer)__N2M_i4uuui4},
	{"i4uuui4i4", (Il2CppMethodPointer)__N2M_i4uuui4i4},
	{"i4uuui4i4i4", (Il2CppMethodPointer)__N2M_i4uuui4i4i4},
	{"i8i", (Il2CppMethodPointer)__N2M_i8i},
	{"i8i1", (Il2CppMethodPointer)__N2M_i8i1},
	{"i8i2", (Il2CppMethodPointer)__N2M_i8i2},
	{"i8i4", (Il2CppMethodPointer)__N2M_i8i4},
	{"i8i8", (Il2CppMethodPointer)__N2M_i8i8},
	{"i8r4", (Il2CppMethodPointer)__N2M_i8r4},
	{"i8r8", (Il2CppMethodPointer)__N2M_i8r8},
	{"i8s1", (Il2CppMethodPointer)__N2M_i8s1},
	{"i8s110", (Il2CppMethodPointer)__N2M_i8s110},
	{"i8s13", (Il2CppMethodPointer)__N2M_i8s13},
	{"i8s19", (Il2CppMethodPointer)__N2M_i8s19},
	{"i8s20", (Il2CppMethodPointer)__N2M_i8s20},
	{"i8s21", (Il2CppMethodPointer)__N2M_i8s21},
	{"i8s25", (Il2CppMethodPointer)__N2M_i8s25},
	{"i8s4", (Il2CppMethodPointer)__N2M_i8s4},
	{"i8u", (Il2CppMethodPointer)__N2M_i8u},
	{"i8u1", (Il2CppMethodPointer)__N2M_i8u1},
	{"i8u2", (Il2CppMethodPointer)__N2M_i8u2},
	{"i8u4", (Il2CppMethodPointer)__N2M_i8u4},
	{"i8u8", (Il2CppMethodPointer)__N2M_i8u8},
	{"i8ui", (Il2CppMethodPointer)__N2M_i8ui},
	{"i8ui1", (Il2CppMethodPointer)__N2M_i8ui1},
	{"i8ui2", (Il2CppMethodPointer)__N2M_i8ui2},
	{"i8ui4", (Il2CppMethodPointer)__N2M_i8ui4},
	{"i8ui8", (Il2CppMethodPointer)__N2M_i8ui8},
	{"i8ui8i4", (Il2CppMethodPointer)__N2M_i8ui8i4},
	{"i8ur4", (Il2CppMethodPointer)__N2M_i8ur4},
	{"i8ur8", (Il2CppMethodPointer)__N2M_i8ur8},
	{"i8us1", (Il2CppMethodPointer)__N2M_i8us1},
	{"i8us110", (Il2CppMethodPointer)__N2M_i8us110},
	{"i8us13", (Il2CppMethodPointer)__N2M_i8us13},
	{"i8us19", (Il2CppMethodPointer)__N2M_i8us19},
	{"i8us20", (Il2CppMethodPointer)__N2M_i8us20},
	{"i8us21", (Il2CppMethodPointer)__N2M_i8us21},
	{"i8us25", (Il2CppMethodPointer)__N2M_i8us25},
	{"i8us4", (Il2CppMethodPointer)__N2M_i8us4},
	{"i8uu", (Il2CppMethodPointer)__N2M_i8uu},
	{"i8uu1", (Il2CppMethodPointer)__N2M_i8uu1},
	{"i8uu2", (Il2CppMethodPointer)__N2M_i8uu2},
	{"i8uu4", (Il2CppMethodPointer)__N2M_i8uu4},
	{"i8uu8", (Il2CppMethodPointer)__N2M_i8uu8},
	{"i8uuu", (Il2CppMethodPointer)__N2M_i8uuu},
	{"iuu", (Il2CppMethodPointer)__N2M_iuu},
	{"r4u", (Il2CppMethodPointer)__N2M_r4u},
	{"r4ur4r4", (Il2CppMethodPointer)__N2M_r4ur4r4},
	{"r4uu", (Il2CppMethodPointer)__N2M_r4uu},
	{"r4uur4r4", (Il2CppMethodPointer)__N2M_r4uur4r4},
	{"r8u", (Il2CppMethodPointer)__N2M_r8u},
	{"r8uu", (Il2CppMethodPointer)__N2M_r8uu},
	{"s0u", (Il2CppMethodPointer)__N2M_s0u},
	{"s0uu", (Il2CppMethodPointer)__N2M_s0uu},
	{"s10u", (Il2CppMethodPointer)__N2M_s10u},
	{"s141u", (Il2CppMethodPointer)__N2M_s141u},
	{"s155us115", (Il2CppMethodPointer)__N2M_s155us115},
	{"s155uu", (Il2CppMethodPointer)__N2M_s155uu},
	{"s155uus115", (Il2CppMethodPointer)__N2M_s155uus115},
	{"s15u", (Il2CppMethodPointer)__N2M_s15u},
	{"s15ui4", (Il2CppMethodPointer)__N2M_s15ui4},
	{"s18uu1", (Il2CppMethodPointer)__N2M_s18uu1},
	{"s19u", (Il2CppMethodPointer)__N2M_s19u},
	{"s19uu", (Il2CppMethodPointer)__N2M_s19uu},
	{"s1u", (Il2CppMethodPointer)__N2M_s1u},
	{"s20u", (Il2CppMethodPointer)__N2M_s20u},
	{"s20ui4i4i4i4i4i4i4i4", (Il2CppMethodPointer)__N2M_s20ui4i4i4i4i4i4i4i4},
	{"s20uu", (Il2CppMethodPointer)__N2M_s20uu},
	{"s25u", (Il2CppMethodPointer)__N2M_s25u},
	{"s25us25", (Il2CppMethodPointer)__N2M_s25us25},
	{"s25uu", (Il2CppMethodPointer)__N2M_s25uu},
	{"s2u", (Il2CppMethodPointer)__N2M_s2u},
	{"s3u", (Il2CppMethodPointer)__N2M_s3u},
	{"s48s48u", (Il2CppMethodPointer)__N2M_s48s48u},
	{"s48u", (Il2CppMethodPointer)__N2M_s48u},
	{"s48us48u", (Il2CppMethodPointer)__N2M_s48us48u},
	{"s48uu", (Il2CppMethodPointer)__N2M_s48uu},
	{"s4u", (Il2CppMethodPointer)__N2M_s4u},
	{"s4ui4", (Il2CppMethodPointer)__N2M_s4ui4},
	{"s57u", (Il2CppMethodPointer)__N2M_s57u},
	{"s59ur4i4r4i4", (Il2CppMethodPointer)__N2M_s59ur4i4r4i4},
	{"s59uu", (Il2CppMethodPointer)__N2M_s59uu},
	{"s59uur4i4r4i4", (Il2CppMethodPointer)__N2M_s59uur4i4r4i4},
	{"s5u", (Il2CppMethodPointer)__N2M_s5u},
	{"s5ui4", (Il2CppMethodPointer)__N2M_s5ui4},
	{"s71u", (Il2CppMethodPointer)__N2M_s71u},
	{"s74", (Il2CppMethodPointer)__N2M_s74},
	{"s74u", (Il2CppMethodPointer)__N2M_s74u},
	{"s74uu", (Il2CppMethodPointer)__N2M_s74uu},
	{"s7u", (Il2CppMethodPointer)__N2M_s7u},
	{"s7ui4", (Il2CppMethodPointer)__N2M_s7ui4},
	{"s8u", (Il2CppMethodPointer)__N2M_s8u},
	{"s9u", (Il2CppMethodPointer)__N2M_s9u},
	{"s9ui4", (Il2CppMethodPointer)__N2M_s9ui4},
	{"u", (Il2CppMethodPointer)__N2M_u},
	{"u1", (Il2CppMethodPointer)__N2M_u1},
	{"u1i", (Il2CppMethodPointer)__N2M_u1i},
	{"u1i1", (Il2CppMethodPointer)__N2M_u1i1},
	{"u1i2", (Il2CppMethodPointer)__N2M_u1i2},
	{"u1i4", (Il2CppMethodPointer)__N2M_u1i4},
	{"u1i4i", (Il2CppMethodPointer)__N2M_u1i4i},
	{"u1i8", (Il2CppMethodPointer)__N2M_u1i8},
	{"u1r4", (Il2CppMethodPointer)__N2M_u1r4},
	{"u1r8", (Il2CppMethodPointer)__N2M_u1r8},
	{"u1s1", (Il2CppMethodPointer)__N2M_u1s1},
	{"u1s110", (Il2CppMethodPointer)__N2M_u1s110},
	{"u1s13", (Il2CppMethodPointer)__N2M_u1s13},
	{"u1s15", (Il2CppMethodPointer)__N2M_u1s15},
	{"u1s19", (Il2CppMethodPointer)__N2M_u1s19},
	{"u1s20", (Il2CppMethodPointer)__N2M_u1s20},
	{"u1s21", (Il2CppMethodPointer)__N2M_u1s21},
	{"u1s25", (Il2CppMethodPointer)__N2M_u1s25},
	{"u1s4", (Il2CppMethodPointer)__N2M_u1s4},
	{"u1s5", (Il2CppMethodPointer)__N2M_u1s5},
	{"u1s7", (Il2CppMethodPointer)__N2M_u1s7},
	{"u1s9", (Il2CppMethodPointer)__N2M_u1s9},
	{"u1u", (Il2CppMethodPointer)__N2M_u1u},
	{"u1u1", (Il2CppMethodPointer)__N2M_u1u1},
	{"u1u2", (Il2CppMethodPointer)__N2M_u1u2},
	{"u1u4", (Il2CppMethodPointer)__N2M_u1u4},
	{"u1u8", (Il2CppMethodPointer)__N2M_u1u8},
	{"u1ui", (Il2CppMethodPointer)__N2M_u1ui},
	{"u1ui1", (Il2CppMethodPointer)__N2M_u1ui1},
	{"u1ui2", (Il2CppMethodPointer)__N2M_u1ui2},
	{"u1ui4", (Il2CppMethodPointer)__N2M_u1ui4},
	{"u1ui4i", (Il2CppMethodPointer)__N2M_u1ui4i},
	{"u1ui4i4", (Il2CppMethodPointer)__N2M_u1ui4i4},
	{"u1ui4u", (Il2CppMethodPointer)__N2M_u1ui4u},
	{"u1ui4u1", (Il2CppMethodPointer)__N2M_u1ui4u1},
	{"u1ui8", (Il2CppMethodPointer)__N2M_u1ui8},
	{"u1ur4", (Il2CppMethodPointer)__N2M_u1ur4},
	{"u1ur8", (Il2CppMethodPointer)__N2M_u1ur8},
	{"u1us0", (Il2CppMethodPointer)__N2M_u1us0},
	{"u1us0s0", (Il2CppMethodPointer)__N2M_u1us0s0},
	{"u1us1", (Il2CppMethodPointer)__N2M_u1us1},
	{"u1us10", (Il2CppMethodPointer)__N2M_u1us10},
	{"u1us110", (Il2CppMethodPointer)__N2M_u1us110},
	{"u1us13", (Il2CppMethodPointer)__N2M_u1us13},
	{"u1us13s13", (Il2CppMethodPointer)__N2M_u1us13s13},
	{"u1us15", (Il2CppMethodPointer)__N2M_u1us15},
	{"u1us15s15", (Il2CppMethodPointer)__N2M_u1us15s15},
	{"u1us19", (Il2CppMethodPointer)__N2M_u1us19},
	{"u1us1s1", (Il2CppMethodPointer)__N2M_u1us1s1},
	{"u1us1u", (Il2CppMethodPointer)__N2M_u1us1u},
	{"u1us1ui4", (Il2CppMethodPointer)__N2M_u1us1ui4},
	{"u1us2", (Il2CppMethodPointer)__N2M_u1us2},
	{"u1us20", (Il2CppMethodPointer)__N2M_u1us20},
	{"u1us21", (Il2CppMethodPointer)__N2M_u1us21},
	{"u1us25", (Il2CppMethodPointer)__N2M_u1us25},
	{"u1us26", (Il2CppMethodPointer)__N2M_u1us26},
	{"u1us27", (Il2CppMethodPointer)__N2M_u1us27},
	{"u1us3", (Il2CppMethodPointer)__N2M_u1us3},
	{"u1us39", (Il2CppMethodPointer)__N2M_u1us39},
	{"u1us4", (Il2CppMethodPointer)__N2M_u1us4},
	{"u1us40", (Il2CppMethodPointer)__N2M_u1us40},
	{"u1us45", (Il2CppMethodPointer)__N2M_u1us45},
	{"u1us46", (Il2CppMethodPointer)__N2M_u1us46},
	{"u1us48", (Il2CppMethodPointer)__N2M_u1us48},
	{"u1us5", (Il2CppMethodPointer)__N2M_u1us5},
	{"u1us55", (Il2CppMethodPointer)__N2M_u1us55},
	{"u1us56", (Il2CppMethodPointer)__N2M_u1us56},
	{"u1us57", (Il2CppMethodPointer)__N2M_u1us57},
	{"u1us59", (Il2CppMethodPointer)__N2M_u1us59},
	{"u1us5s5", (Il2CppMethodPointer)__N2M_u1us5s5},
	{"u1us5u", (Il2CppMethodPointer)__N2M_u1us5u},
	{"u1us60", (Il2CppMethodPointer)__N2M_u1us60},
	{"u1us60uu", (Il2CppMethodPointer)__N2M_u1us60uu},
	{"u1us61", (Il2CppMethodPointer)__N2M_u1us61},
	{"u1us63", (Il2CppMethodPointer)__N2M_u1us63},
	{"u1us66", (Il2CppMethodPointer)__N2M_u1us66},
	{"u1us67", (Il2CppMethodPointer)__N2M_u1us67},
	{"u1us68", (Il2CppMethodPointer)__N2M_u1us68},
	{"u1us69", (Il2CppMethodPointer)__N2M_u1us69},
	{"u1us7", (Il2CppMethodPointer)__N2M_u1us7},
	{"u1us7s7", (Il2CppMethodPointer)__N2M_u1us7s7},
	{"u1us8", (Il2CppMethodPointer)__N2M_u1us8},
	{"u1us9", (Il2CppMethodPointer)__N2M_u1us9},
	{"u1us9s9", (Il2CppMethodPointer)__N2M_u1us9s9},
	{"u1uu", (Il2CppMethodPointer)__N2M_u1uu},
	{"u1uu1", (Il2CppMethodPointer)__N2M_u1uu1},
	{"u1uu1u1", (Il2CppMethodPointer)__N2M_u1uu1u1},
	{"u1uu2", (Il2CppMethodPointer)__N2M_u1uu2},
	{"u1uu2i4", (Il2CppMethodPointer)__N2M_u1uu2i4},
	{"u1uu2u2i4", (Il2CppMethodPointer)__N2M_u1uu2u2i4},
	{"u1uu4", (Il2CppMethodPointer)__N2M_u1uu4},
	{"u1uu8", (Il2CppMethodPointer)__N2M_u1uu8},
	{"u1uu8u", (Il2CppMethodPointer)__N2M_u1uu8u},
	{"u1uu8u8", (Il2CppMethodPointer)__N2M_u1uu8u8},
	{"u1uui4", (Il2CppMethodPointer)__N2M_u1uui4},
	{"u1uui4u", (Il2CppMethodPointer)__N2M_u1uui4u},
	{"u1uuu", (Il2CppMethodPointer)__N2M_u1uuu},
	{"u1uuu1", (Il2CppMethodPointer)__N2M_u1uuu1},
	{"u1uuui4", (Il2CppMethodPointer)__N2M_u1uuui4},
	{"u1uuuu", (Il2CppMethodPointer)__N2M_u1uuuu},
	{"u2i", (Il2CppMethodPointer)__N2M_u2i},
	{"u2i1", (Il2CppMethodPointer)__N2M_u2i1},
	{"u2i2", (Il2CppMethodPointer)__N2M_u2i2},
	{"u2i4", (Il2CppMethodPointer)__N2M_u2i4},
	{"u2i8", (Il2CppMethodPointer)__N2M_u2i8},
	{"u2r4", (Il2CppMethodPointer)__N2M_u2r4},
	{"u2r8", (Il2CppMethodPointer)__N2M_u2r8},
	{"u2s1", (Il2CppMethodPointer)__N2M_u2s1},
	{"u2s110", (Il2CppMethodPointer)__N2M_u2s110},
	{"u2s13", (Il2CppMethodPointer)__N2M_u2s13},
	{"u2s19", (Il2CppMethodPointer)__N2M_u2s19},
	{"u2s20", (Il2CppMethodPointer)__N2M_u2s20},
	{"u2s21", (Il2CppMethodPointer)__N2M_u2s21},
	{"u2s25", (Il2CppMethodPointer)__N2M_u2s25},
	{"u2s4", (Il2CppMethodPointer)__N2M_u2s4},
	{"u2u", (Il2CppMethodPointer)__N2M_u2u},
	{"u2u1", (Il2CppMethodPointer)__N2M_u2u1},
	{"u2u2", (Il2CppMethodPointer)__N2M_u2u2},
	{"u2u4", (Il2CppMethodPointer)__N2M_u2u4},
	{"u2u8", (Il2CppMethodPointer)__N2M_u2u8},
	{"u2ui", (Il2CppMethodPointer)__N2M_u2ui},
	{"u2ui1", (Il2CppMethodPointer)__N2M_u2ui1},
	{"u2ui2", (Il2CppMethodPointer)__N2M_u2ui2},
	{"u2ui4", (Il2CppMethodPointer)__N2M_u2ui4},
	{"u2ui8", (Il2CppMethodPointer)__N2M_u2ui8},
	{"u2ur4", (Il2CppMethodPointer)__N2M_u2ur4},
	{"u2ur8", (Il2CppMethodPointer)__N2M_u2ur8},
	{"u2us1", (Il2CppMethodPointer)__N2M_u2us1},
	{"u2us110", (Il2CppMethodPointer)__N2M_u2us110},
	{"u2us13", (Il2CppMethodPointer)__N2M_u2us13},
	{"u2us19", (Il2CppMethodPointer)__N2M_u2us19},
	{"u2us20", (Il2CppMethodPointer)__N2M_u2us20},
	{"u2us21", (Il2CppMethodPointer)__N2M_u2us21},
	{"u2us25", (Il2CppMethodPointer)__N2M_u2us25},
	{"u2us4", (Il2CppMethodPointer)__N2M_u2us4},
	{"u2uu", (Il2CppMethodPointer)__N2M_u2uu},
	{"u2uu1", (Il2CppMethodPointer)__N2M_u2uu1},
	{"u2uu2", (Il2CppMethodPointer)__N2M_u2uu2},
	{"u2uu4", (Il2CppMethodPointer)__N2M_u2uu4},
	{"u2uu8", (Il2CppMethodPointer)__N2M_u2uu8},
	{"u4i", (Il2CppMethodPointer)__N2M_u4i},
	{"u4i1", (Il2CppMethodPointer)__N2M_u4i1},
	{"u4i2", (Il2CppMethodPointer)__N2M_u4i2},
	{"u4i4", (Il2CppMethodPointer)__N2M_u4i4},
	{"u4i8", (Il2CppMethodPointer)__N2M_u4i8},
	{"u4r4", (Il2CppMethodPointer)__N2M_u4r4},
	{"u4r8", (Il2CppMethodPointer)__N2M_u4r8},
	{"u4s1", (Il2CppMethodPointer)__N2M_u4s1},
	{"u4s110", (Il2CppMethodPointer)__N2M_u4s110},
	{"u4s13", (Il2CppMethodPointer)__N2M_u4s13},
	{"u4s19", (Il2CppMethodPointer)__N2M_u4s19},
	{"u4s20", (Il2CppMethodPointer)__N2M_u4s20},
	{"u4s21", (Il2CppMethodPointer)__N2M_u4s21},
	{"u4s25", (Il2CppMethodPointer)__N2M_u4s25},
	{"u4s4", (Il2CppMethodPointer)__N2M_u4s4},
	{"u4u", (Il2CppMethodPointer)__N2M_u4u},
	{"u4u1", (Il2CppMethodPointer)__N2M_u4u1},
	{"u4u2", (Il2CppMethodPointer)__N2M_u4u2},
	{"u4u4", (Il2CppMethodPointer)__N2M_u4u4},
	{"u4u8", (Il2CppMethodPointer)__N2M_u4u8},
	{"u4ui", (Il2CppMethodPointer)__N2M_u4ui},
	{"u4ui1", (Il2CppMethodPointer)__N2M_u4ui1},
	{"u4ui2", (Il2CppMethodPointer)__N2M_u4ui2},
	{"u4ui4", (Il2CppMethodPointer)__N2M_u4ui4},
	{"u4ui8", (Il2CppMethodPointer)__N2M_u4ui8},
	{"u4ur4", (Il2CppMethodPointer)__N2M_u4ur4},
	{"u4ur8", (Il2CppMethodPointer)__N2M_u4ur8},
	{"u4us1", (Il2CppMethodPointer)__N2M_u4us1},
	{"u4us110", (Il2CppMethodPointer)__N2M_u4us110},
	{"u4us13", (Il2CppMethodPointer)__N2M_u4us13},
	{"u4us19", (Il2CppMethodPointer)__N2M_u4us19},
	{"u4us20", (Il2CppMethodPointer)__N2M_u4us20},
	{"u4us21", (Il2CppMethodPointer)__N2M_u4us21},
	{"u4us25", (Il2CppMethodPointer)__N2M_u4us25},
	{"u4us4", (Il2CppMethodPointer)__N2M_u4us4},
	{"u4uu", (Il2CppMethodPointer)__N2M_u4uu},
	{"u4uu1", (Il2CppMethodPointer)__N2M_u4uu1},
	{"u4uu2", (Il2CppMethodPointer)__N2M_u4uu2},
	{"u4uu4", (Il2CppMethodPointer)__N2M_u4uu4},
	{"u4uu8", (Il2CppMethodPointer)__N2M_u4uu8},
	{"u8i", (Il2CppMethodPointer)__N2M_u8i},
	{"u8i1", (Il2CppMethodPointer)__N2M_u8i1},
	{"u8i2", (Il2CppMethodPointer)__N2M_u8i2},
	{"u8i4", (Il2CppMethodPointer)__N2M_u8i4},
	{"u8i8", (Il2CppMethodPointer)__N2M_u8i8},
	{"u8r4", (Il2CppMethodPointer)__N2M_u8r4},
	{"u8r8", (Il2CppMethodPointer)__N2M_u8r8},
	{"u8s1", (Il2CppMethodPointer)__N2M_u8s1},
	{"u8s110", (Il2CppMethodPointer)__N2M_u8s110},
	{"u8s13", (Il2CppMethodPointer)__N2M_u8s13},
	{"u8s19", (Il2CppMethodPointer)__N2M_u8s19},
	{"u8s20", (Il2CppMethodPointer)__N2M_u8s20},
	{"u8s21", (Il2CppMethodPointer)__N2M_u8s21},
	{"u8s25", (Il2CppMethodPointer)__N2M_u8s25},
	{"u8s4", (Il2CppMethodPointer)__N2M_u8s4},
	{"u8u", (Il2CppMethodPointer)__N2M_u8u},
	{"u8u1", (Il2CppMethodPointer)__N2M_u8u1},
	{"u8u2", (Il2CppMethodPointer)__N2M_u8u2},
	{"u8u4", (Il2CppMethodPointer)__N2M_u8u4},
	{"u8u8", (Il2CppMethodPointer)__N2M_u8u8},
	{"u8ui", (Il2CppMethodPointer)__N2M_u8ui},
	{"u8ui1", (Il2CppMethodPointer)__N2M_u8ui1},
	{"u8ui2", (Il2CppMethodPointer)__N2M_u8ui2},
	{"u8ui4", (Il2CppMethodPointer)__N2M_u8ui4},
	{"u8ui8", (Il2CppMethodPointer)__N2M_u8ui8},
	{"u8ur4", (Il2CppMethodPointer)__N2M_u8ur4},
	{"u8ur8", (Il2CppMethodPointer)__N2M_u8ur8},
	{"u8us1", (Il2CppMethodPointer)__N2M_u8us1},
	{"u8us110", (Il2CppMethodPointer)__N2M_u8us110},
	{"u8us13", (Il2CppMethodPointer)__N2M_u8us13},
	{"u8us19", (Il2CppMethodPointer)__N2M_u8us19},
	{"u8us20", (Il2CppMethodPointer)__N2M_u8us20},
	{"u8us21", (Il2CppMethodPointer)__N2M_u8us21},
	{"u8us25", (Il2CppMethodPointer)__N2M_u8us25},
	{"u8us4", (Il2CppMethodPointer)__N2M_u8us4},
	{"u8uu", (Il2CppMethodPointer)__N2M_u8uu},
	{"u8uu1", (Il2CppMethodPointer)__N2M_u8uu1},
	{"u8uu2", (Il2CppMethodPointer)__N2M_u8uu2},
	{"u8uu4", (Il2CppMethodPointer)__N2M_u8uu4},
	{"u8uu8", (Il2CppMethodPointer)__N2M_u8uu8},
	{"ui", (Il2CppMethodPointer)__N2M_ui},
	{"ui1", (Il2CppMethodPointer)__N2M_ui1},
	{"ui2", (Il2CppMethodPointer)__N2M_ui2},
	{"ui4", (Il2CppMethodPointer)__N2M_ui4},
	{"ui8", (Il2CppMethodPointer)__N2M_ui8},
	{"ur4", (Il2CppMethodPointer)__N2M_ur4},
	{"ur8", (Il2CppMethodPointer)__N2M_ur8},
	{"us1", (Il2CppMethodPointer)__N2M_us1},
	{"us110", (Il2CppMethodPointer)__N2M_us110},
	{"us13", (Il2CppMethodPointer)__N2M_us13},
	{"us19", (Il2CppMethodPointer)__N2M_us19},
	{"us20", (Il2CppMethodPointer)__N2M_us20},
	{"us21", (Il2CppMethodPointer)__N2M_us21},
	{"us25", (Il2CppMethodPointer)__N2M_us25},
	{"us4", (Il2CppMethodPointer)__N2M_us4},
	{"uu", (Il2CppMethodPointer)__N2M_uu},
	{"uu1", (Il2CppMethodPointer)__N2M_uu1},
	{"uu2", (Il2CppMethodPointer)__N2M_uu2},
	{"uu4", (Il2CppMethodPointer)__N2M_uu4},
	{"uu8", (Il2CppMethodPointer)__N2M_uu8},
	{"uui", (Il2CppMethodPointer)__N2M_uui},
	{"uui1", (Il2CppMethodPointer)__N2M_uui1},
	{"uui1uu", (Il2CppMethodPointer)__N2M_uui1uu},
	{"uui2", (Il2CppMethodPointer)__N2M_uui2},
	{"uui2uu", (Il2CppMethodPointer)__N2M_uui2uu},
	{"uui4", (Il2CppMethodPointer)__N2M_uui4},
	{"uui4i4uu", (Il2CppMethodPointer)__N2M_uui4i4uu},
	{"uui4i8i8u1uu", (Il2CppMethodPointer)__N2M_uui4i8i8u1uu},
	{"uui4i8uu", (Il2CppMethodPointer)__N2M_uui4i8uu},
	{"uui4iuu", (Il2CppMethodPointer)__N2M_uui4iuu},
	{"uui4ui4uu", (Il2CppMethodPointer)__N2M_uui4ui4uu},
	{"uui4uu", (Il2CppMethodPointer)__N2M_uui4uu},
	{"uui4uuu", (Il2CppMethodPointer)__N2M_uui4uuu},
	{"uui4uuuu", (Il2CppMethodPointer)__N2M_uui4uuuu},
	{"uui4uuuuuu", (Il2CppMethodPointer)__N2M_uui4uuuuuu},
	{"uui8", (Il2CppMethodPointer)__N2M_uui8},
	{"uui8uu", (Il2CppMethodPointer)__N2M_uui8uu},
	{"uuiuu", (Il2CppMethodPointer)__N2M_uuiuu},
	{"uur4", (Il2CppMethodPointer)__N2M_uur4},
	{"uur4uu", (Il2CppMethodPointer)__N2M_uur4uu},
	{"uur8", (Il2CppMethodPointer)__N2M_uur8},
	{"uur8uu", (Il2CppMethodPointer)__N2M_uur8uu},
	{"uus0", (Il2CppMethodPointer)__N2M_uus0},
	{"uus0uu", (Il2CppMethodPointer)__N2M_uus0uu},
	{"uus1", (Il2CppMethodPointer)__N2M_uus1},
	{"uus106uu", (Il2CppMethodPointer)__N2M_uus106uu},
	{"uus108uu", (Il2CppMethodPointer)__N2M_uus108uu},
	{"uus110", (Il2CppMethodPointer)__N2M_uus110},
	{"uus110uu", (Il2CppMethodPointer)__N2M_uus110uu},
	{"uus112uu", (Il2CppMethodPointer)__N2M_uus112uu},
	{"uus116uu", (Il2CppMethodPointer)__N2M_uus116uu},
	{"uus117uu", (Il2CppMethodPointer)__N2M_uus117uu},
	{"uus117uuu", (Il2CppMethodPointer)__N2M_uus117uuu},
	{"uus13", (Il2CppMethodPointer)__N2M_uus13},
	{"uus13uu", (Il2CppMethodPointer)__N2M_uus13uu},
	{"uus15s15uu", (Il2CppMethodPointer)__N2M_uus15s15uu},
	{"uus15uu", (Il2CppMethodPointer)__N2M_uus15uu},
	{"uus19", (Il2CppMethodPointer)__N2M_uus19},
	{"uus19uu", (Il2CppMethodPointer)__N2M_uus19uu},
	{"uus1uu", (Il2CppMethodPointer)__N2M_uus1uu},
	{"uus20", (Il2CppMethodPointer)__N2M_uus20},
	{"uus20uu", (Il2CppMethodPointer)__N2M_uus20uu},
	{"uus21", (Il2CppMethodPointer)__N2M_uus21},
	{"uus21uu", (Il2CppMethodPointer)__N2M_uus21uu},
	{"uus25", (Il2CppMethodPointer)__N2M_uus25},
	{"uus25uu", (Il2CppMethodPointer)__N2M_uus25uu},
	{"uus2s2uu", (Il2CppMethodPointer)__N2M_uus2s2uu},
	{"uus4", (Il2CppMethodPointer)__N2M_uus4},
	{"uus46i4uu", (Il2CppMethodPointer)__N2M_uus46i4uu},
	{"uus46s46uu", (Il2CppMethodPointer)__N2M_uus46s46uu},
	{"uus46uu", (Il2CppMethodPointer)__N2M_uus46uu},
	{"uus48uuu", (Il2CppMethodPointer)__N2M_uus48uuu},
	{"uus4uu", (Il2CppMethodPointer)__N2M_uus4uu},
	{"uus5", (Il2CppMethodPointer)__N2M_uus5},
	{"uus5s5uu", (Il2CppMethodPointer)__N2M_uus5s5uu},
	{"uus5uu", (Il2CppMethodPointer)__N2M_uus5uu},
	{"uus66uu", (Il2CppMethodPointer)__N2M_uus66uu},
	{"uus68uu", (Il2CppMethodPointer)__N2M_uus68uu},
	{"uus7s7uu", (Il2CppMethodPointer)__N2M_uus7s7uu},
	{"uus7uu", (Il2CppMethodPointer)__N2M_uus7uu},
	{"uus9s9uu", (Il2CppMethodPointer)__N2M_uus9s9uu},
	{"uus9uu", (Il2CppMethodPointer)__N2M_uus9uu},
	{"uuu", (Il2CppMethodPointer)__N2M_uuu},
	{"uuu1", (Il2CppMethodPointer)__N2M_uuu1},
	{"uuu1u1i4uu", (Il2CppMethodPointer)__N2M_uuu1u1i4uu},
	{"uuu1u1uu", (Il2CppMethodPointer)__N2M_uuu1u1uu},
	{"uuu1uu", (Il2CppMethodPointer)__N2M_uuu1uu},
	{"uuu2", (Il2CppMethodPointer)__N2M_uuu2},
	{"uuu2uu", (Il2CppMethodPointer)__N2M_uuu2uu},
	{"uuu2uuu", (Il2CppMethodPointer)__N2M_uuu2uuu},
	{"uuu4", (Il2CppMethodPointer)__N2M_uuu4},
	{"uuu4uu", (Il2CppMethodPointer)__N2M_uuu4uu},
	{"uuu8", (Il2CppMethodPointer)__N2M_uuu8},
	{"uuu8u8uu", (Il2CppMethodPointer)__N2M_uuu8u8uu},
	{"uuu8uu", (Il2CppMethodPointer)__N2M_uuu8uu},
	{"uuui4", (Il2CppMethodPointer)__N2M_uuui4},
	{"uuui4i4", (Il2CppMethodPointer)__N2M_uuui4i4},
	{"uuui4i4uu", (Il2CppMethodPointer)__N2M_uuui4i4uu},
	{"uuui4u1i8i8uuuu", (Il2CppMethodPointer)__N2M_uuui4u1i8i8uuuu},
	{"uuui4ui4uu", (Il2CppMethodPointer)__N2M_uuui4ui4uu},
	{"uuui4uu", (Il2CppMethodPointer)__N2M_uuui4uu},
	{"uuui4uuu", (Il2CppMethodPointer)__N2M_uuui4uuu},
	{"uuui4uuuu", (Il2CppMethodPointer)__N2M_uuui4uuuu},
	{"uuui4uuuuuu", (Il2CppMethodPointer)__N2M_uuui4uuuuuu},
	{"uuui8uu", (Il2CppMethodPointer)__N2M_uuui8uu},
	{"uuur4i4r4i4uu", (Il2CppMethodPointer)__N2M_uuur4i4r4i4uu},
	{"uuur4r4uu", (Il2CppMethodPointer)__N2M_uuur4r4uu},
	{"uuur8uu", (Il2CppMethodPointer)__N2M_uuur8uu},
	{"uuus0u", (Il2CppMethodPointer)__N2M_uuus0u},
	{"uuus115uu", (Il2CppMethodPointer)__N2M_uuus115uu},
	{"uuus19u1uu", (Il2CppMethodPointer)__N2M_uuus19u1uu},
	{"uuus27uu", (Il2CppMethodPointer)__N2M_uuus27uu},
	{"uuuu", (Il2CppMethodPointer)__N2M_uuuu},
	{"uuuu1", (Il2CppMethodPointer)__N2M_uuuu1},
	{"uuuu1s109uu", (Il2CppMethodPointer)__N2M_uuuu1s109uu},
	{"uuuu1u1", (Il2CppMethodPointer)__N2M_uuuu1u1},
	{"uuuu1uu", (Il2CppMethodPointer)__N2M_uuuu1uu},
	{"uuuu4uu", (Il2CppMethodPointer)__N2M_uuuu4uu},
	{"uuuui4", (Il2CppMethodPointer)__N2M_uuuui4},
	{"uuuui4uu", (Il2CppMethodPointer)__N2M_uuuui4uu},
	{"uuuus0u", (Il2CppMethodPointer)__N2M_uuuus0u},
	{"uuuus19u1uu", (Il2CppMethodPointer)__N2M_uuuus19u1uu},
	{"uuuuu", (Il2CppMethodPointer)__N2M_uuuuu},
	{"uuuuu1", (Il2CppMethodPointer)__N2M_uuuuu1},
	{"uuuuu1u1u", (Il2CppMethodPointer)__N2M_uuuuu1u1u},
	{"uuuuu1uu", (Il2CppMethodPointer)__N2M_uuuuu1uu},
	{"uuuuui4", (Il2CppMethodPointer)__N2M_uuuuui4},
	{"uuuuuu", (Il2CppMethodPointer)__N2M_uuuuuu},
	{"uuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuu},
	{"uuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuu},
	{"v", (Il2CppMethodPointer)__N2M_v},
	{"vi", (Il2CppMethodPointer)__N2M_vi},
	{"vi4", (Il2CppMethodPointer)__N2M_vi4},
	{"vi4i8", (Il2CppMethodPointer)__N2M_vi4i8},
	{"vi4i8i8u1", (Il2CppMethodPointer)__N2M_vi4i8i8u1},
	{"vi4u", (Il2CppMethodPointer)__N2M_vi4u},
	{"vr4", (Il2CppMethodPointer)__N2M_vr4},
	{"vs0", (Il2CppMethodPointer)__N2M_vs0},
	{"vs1", (Il2CppMethodPointer)__N2M_vs1},
	{"vs106", (Il2CppMethodPointer)__N2M_vs106},
	{"vs108", (Il2CppMethodPointer)__N2M_vs108},
	{"vs112", (Il2CppMethodPointer)__N2M_vs112},
	{"vs116", (Il2CppMethodPointer)__N2M_vs116},
	{"vs117", (Il2CppMethodPointer)__N2M_vs117},
	{"vs117u", (Il2CppMethodPointer)__N2M_vs117u},
	{"vs46", (Il2CppMethodPointer)__N2M_vs46},
	{"vs46i4", (Il2CppMethodPointer)__N2M_vs46i4},
	{"vs46s46", (Il2CppMethodPointer)__N2M_vs46s46},
	{"vs66", (Il2CppMethodPointer)__N2M_vs66},
	{"vs68", (Il2CppMethodPointer)__N2M_vs68},
	{"vs7", (Il2CppMethodPointer)__N2M_vs7},
	{"vu", (Il2CppMethodPointer)__N2M_vu},
	{"vu1", (Il2CppMethodPointer)__N2M_vu1},
	{"vu1u1i4", (Il2CppMethodPointer)__N2M_vu1u1i4},
	{"vu2u", (Il2CppMethodPointer)__N2M_vu2u},
	{"vui", (Il2CppMethodPointer)__N2M_vui},
	{"vui2", (Il2CppMethodPointer)__N2M_vui2},
	{"vui4", (Il2CppMethodPointer)__N2M_vui4},
	{"vui4i4", (Il2CppMethodPointer)__N2M_vui4i4},
	{"vui4i8", (Il2CppMethodPointer)__N2M_vui4i8},
	{"vui4i8i8u1", (Il2CppMethodPointer)__N2M_vui4i8i8u1},
	{"vui4s15", (Il2CppMethodPointer)__N2M_vui4s15},
	{"vui4s4", (Il2CppMethodPointer)__N2M_vui4s4},
	{"vui4s5", (Il2CppMethodPointer)__N2M_vui4s5},
	{"vui4s7", (Il2CppMethodPointer)__N2M_vui4s7},
	{"vui4s9", (Il2CppMethodPointer)__N2M_vui4s9},
	{"vui4u", (Il2CppMethodPointer)__N2M_vui4u},
	{"vui4u1", (Il2CppMethodPointer)__N2M_vui4u1},
	{"vui4u1i8i8uu", (Il2CppMethodPointer)__N2M_vui4u1i8i8uu},
	{"vui4u8", (Il2CppMethodPointer)__N2M_vui4u8},
	{"vui4ui4i4", (Il2CppMethodPointer)__N2M_vui4ui4i4},
	{"vui4uu", (Il2CppMethodPointer)__N2M_vui4uu},
	{"vui4uuu", (Il2CppMethodPointer)__N2M_vui4uuu},
	{"vui8", (Il2CppMethodPointer)__N2M_vui8},
	{"vui8ui8", (Il2CppMethodPointer)__N2M_vui8ui8},
	{"vur4", (Il2CppMethodPointer)__N2M_vur4},
	{"vur4r4", (Il2CppMethodPointer)__N2M_vur4r4},
	{"vur8", (Il2CppMethodPointer)__N2M_vur8},
	{"vus0", (Il2CppMethodPointer)__N2M_vus0},
	{"vus1", (Il2CppMethodPointer)__N2M_vus1},
	{"vus10", (Il2CppMethodPointer)__N2M_vus10},
	{"vus106", (Il2CppMethodPointer)__N2M_vus106},
	{"vus108", (Il2CppMethodPointer)__N2M_vus108},
	{"vus112", (Il2CppMethodPointer)__N2M_vus112},
	{"vus116", (Il2CppMethodPointer)__N2M_vus116},
	{"vus117", (Il2CppMethodPointer)__N2M_vus117},
	{"vus117u", (Il2CppMethodPointer)__N2M_vus117u},
	{"vus15", (Il2CppMethodPointer)__N2M_vus15},
	{"vus19u1", (Il2CppMethodPointer)__N2M_vus19u1},
	{"vus1i4", (Il2CppMethodPointer)__N2M_vus1i4},
	{"vus1u", (Il2CppMethodPointer)__N2M_vus1u},
	{"vus1ui4", (Il2CppMethodPointer)__N2M_vus1ui4},
	{"vus2", (Il2CppMethodPointer)__N2M_vus2},
	{"vus27", (Il2CppMethodPointer)__N2M_vus27},
	{"vus3", (Il2CppMethodPointer)__N2M_vus3},
	{"vus4", (Il2CppMethodPointer)__N2M_vus4},
	{"vus46", (Il2CppMethodPointer)__N2M_vus46},
	{"vus46i4", (Il2CppMethodPointer)__N2M_vus46i4},
	{"vus46s46", (Il2CppMethodPointer)__N2M_vus46s46},
	{"vus48", (Il2CppMethodPointer)__N2M_vus48},
	{"vus48s146", (Il2CppMethodPointer)__N2M_vus48s146},
	{"vus48s146u", (Il2CppMethodPointer)__N2M_vus48s146u},
	{"vus48uu", (Il2CppMethodPointer)__N2M_vus48uu},
	{"vus5", (Il2CppMethodPointer)__N2M_vus5},
	{"vus57u", (Il2CppMethodPointer)__N2M_vus57u},
	{"vus57uu", (Il2CppMethodPointer)__N2M_vus57uu},
	{"vus5u", (Il2CppMethodPointer)__N2M_vus5u},
	{"vus60u", (Il2CppMethodPointer)__N2M_vus60u},
	{"vus60uu", (Il2CppMethodPointer)__N2M_vus60uu},
	{"vus66", (Il2CppMethodPointer)__N2M_vus66},
	{"vus68", (Il2CppMethodPointer)__N2M_vus68},
	{"vus7", (Il2CppMethodPointer)__N2M_vus7},
	{"vus8", (Il2CppMethodPointer)__N2M_vus8},
	{"vus9", (Il2CppMethodPointer)__N2M_vus9},
	{"vutypedbyrefu", (Il2CppMethodPointer)__N2M_vutypedbyrefu},
	{"vuu", (Il2CppMethodPointer)__N2M_vuu},
	{"vuu1", (Il2CppMethodPointer)__N2M_vuu1},
	{"vuu1s109", (Il2CppMethodPointer)__N2M_vuu1s109},
	{"vuu1u1i4", (Il2CppMethodPointer)__N2M_vuu1u1i4},
	{"vuu2", (Il2CppMethodPointer)__N2M_vuu2},
	{"vuu2u", (Il2CppMethodPointer)__N2M_vuu2u},
	{"vuu4", (Il2CppMethodPointer)__N2M_vuu4},
	{"vuu8", (Il2CppMethodPointer)__N2M_vuu8},
	{"vuu8u", (Il2CppMethodPointer)__N2M_vuu8u},
	{"vuui4", (Il2CppMethodPointer)__N2M_vuui4},
	{"vuui4i4", (Il2CppMethodPointer)__N2M_vuui4i4},
	{"vuui4s48", (Il2CppMethodPointer)__N2M_vuui4s48},
	{"vuui4u1i8i8uu", (Il2CppMethodPointer)__N2M_vuui4u1i8i8uu},
	{"vuui8", (Il2CppMethodPointer)__N2M_vuui8},
	{"vuur8", (Il2CppMethodPointer)__N2M_vuur8},
	{"vuus0", (Il2CppMethodPointer)__N2M_vuus0},
	{"vuus149i4", (Il2CppMethodPointer)__N2M_vuus149i4},
	{"vuus149i4s48", (Il2CppMethodPointer)__N2M_vuus149i4s48},
	{"vuus19u1", (Il2CppMethodPointer)__N2M_vuus19u1},
	{"vuus27", (Il2CppMethodPointer)__N2M_vuus27},
	{"vuuu", (Il2CppMethodPointer)__N2M_vuuu},
	{"vuuu1", (Il2CppMethodPointer)__N2M_vuuu1},
	{"vuuu1s109", (Il2CppMethodPointer)__N2M_vuuu1s109},
	{"vuuu1u1", (Il2CppMethodPointer)__N2M_vuuu1u1},
	{"vuuu4", (Il2CppMethodPointer)__N2M_vuuu4},
	{"vuuui4", (Il2CppMethodPointer)__N2M_vuuui4},
	{"vuuui4uu", (Il2CppMethodPointer)__N2M_vuuui4uu},
	{"vuuui4uuu", (Il2CppMethodPointer)__N2M_vuuui4uuu},
	{"vuuus0", (Il2CppMethodPointer)__N2M_vuuus0},
	{"vuuus19u1", (Il2CppMethodPointer)__N2M_vuuus19u1},
	{"vuuuu", (Il2CppMethodPointer)__N2M_vuuuu},
	{"vuuuu1", (Il2CppMethodPointer)__N2M_vuuuu1},
	{"vuuuuu", (Il2CppMethodPointer)__N2M_vuuuuu},
	{nullptr, nullptr},
};

static int8_t __N2M_AdjustorThunk_i1uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_AdjustorThunk_i2uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us15(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us15s15(uintptr_t __arg0, __struct_15__ __arg1, __struct_15__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_15__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us2s2(uintptr_t __arg0, __struct_2__ __arg1, __struct_2__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_2__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_2__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us5(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us5s5(uintptr_t __arg0, __struct_5__ __arg1, __struct_5__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_5__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us7s7(uintptr_t __arg0, __struct_7__ __arg1, __struct_7__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_7__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us9s9(uintptr_t __arg0, __struct_9__ __arg1, __struct_9__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_9__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu1u1(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu8u8(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_AdjustorThunk_i8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static intptr_t __N2M_AdjustorThunk_iuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    intptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_AdjustorThunk_r4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static double __N2M_AdjustorThunk_r8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    double ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_0__ __N2M_AdjustorThunk_s0u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_0__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_10__ __N2M_AdjustorThunk_s10u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_10__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_15__ __N2M_AdjustorThunk_s15u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_15__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_15__ __N2M_AdjustorThunk_s15ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_15__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_18__ __N2M_AdjustorThunk_s18uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    __struct_18__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_19__ __N2M_AdjustorThunk_s19uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_19__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_20__ __N2M_AdjustorThunk_s20uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_20__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_25__ __N2M_AdjustorThunk_s25u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_25__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_25__ __N2M_AdjustorThunk_s25us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_25__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_25__ __N2M_AdjustorThunk_s25uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_25__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_2__ __N2M_AdjustorThunk_s2u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_2__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_3__ __N2M_AdjustorThunk_s3u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_3__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_4__ __N2M_AdjustorThunk_s4u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_4__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_4__ __N2M_AdjustorThunk_s4ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_4__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_5__ __N2M_AdjustorThunk_s5u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_5__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_7__ __N2M_AdjustorThunk_s7u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_7__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_8__ __N2M_AdjustorThunk_s8u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_8__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_9__ __N2M_AdjustorThunk_s9u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_9__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us10(uintptr_t __arg0, __struct_10__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_10__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us15(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us1s1(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_1__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us1u(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us1ui4(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us20(uintptr_t __arg0, __struct_20__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_20__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us25(uintptr_t __arg0, __struct_25__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_25__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us26(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_26__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us27(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us39(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_39__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us40(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us45(uintptr_t __arg0, __struct_45__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_45__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us46(uintptr_t __arg0, __struct_46__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_46__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us48(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us5(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us55(uintptr_t __arg0, __struct_55__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_55__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us56(uintptr_t __arg0, __struct_56__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_56__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us57(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_57__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us59(uintptr_t __arg0, __struct_59__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_59__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us5s5(uintptr_t __arg0, __struct_5__ __arg1, __struct_5__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_5__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us60(uintptr_t __arg0, __struct_60__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_60__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us61(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_61__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us63(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us66(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us67(uintptr_t __arg0, __struct_67__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_67__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us68(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us69(uintptr_t __arg0, __struct_69__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_69__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us7(uintptr_t __arg0, __struct_7__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us8(uintptr_t __arg0, __struct_8__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_8__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us9(uintptr_t __arg0, __struct_9__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu8u8(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_AdjustorThunk_u2u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_AdjustorThunk_u2uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_AdjustorThunk_u4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_AdjustorThunk_u8u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_AdjustorThunk_u8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uu(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uus0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuus0u(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuus0u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_0__ __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_0__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuuu1u1u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static void __N2M_AdjustorThunk_vu(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4s15(uintptr_t __arg0, int32_t __arg1, __struct_15__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_15__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4s4(uintptr_t __arg0, int32_t __arg1, __struct_4__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_4__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4uu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4uuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus10(uintptr_t __arg0, __struct_10__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_10__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus15(uintptr_t __arg0, __struct_15__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_15__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus1i4(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus1u(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus1ui4(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus4(uintptr_t __arg0, __struct_4__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_4__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus48(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus48s146(uintptr_t __arg0, __struct_48__ __arg1, __struct_146__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_146__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus48s146u(uintptr_t __arg0, __struct_48__ __arg1, __struct_146__ __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_146__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus48uu(uintptr_t __arg0, __struct_48__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus5(uintptr_t __arg0, __struct_5__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_5__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus7(uintptr_t __arg0, __struct_7__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_7__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus8(uintptr_t __arg0, __struct_8__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_8__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus9(uintptr_t __arg0, __struct_9__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_9__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuus0(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuu1u1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuus0(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_0__ __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_0__*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


NativeAdjustThunkMethodInfo hybridclr::interpreter::g_adjustThunkStub[] = 
{

	{"i1uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i1uu},
	{"i2uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i2uu},
	{"i4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4u},
	{"i4ui1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui1},
	{"i4ui2", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui2},
	{"i4ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui4},
	{"i4ui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui4i4},
	{"i4ui8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui8},
	{"i4ur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ur4},
	{"i4ur8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ur8},
	{"i4us1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us1},
	{"i4us15", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us15},
	{"i4us15s15", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us15s15},
	{"i4us19", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us19},
	{"i4us20", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us20},
	{"i4us21", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us21},
	{"i4us25", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us25},
	{"i4us2s2", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us2s2},
	{"i4us4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us4},
	{"i4us5", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us5},
	{"i4us5s5", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us5s5},
	{"i4us7s7", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us7s7},
	{"i4us9s9", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us9s9},
	{"i4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu},
	{"i4uu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu1},
	{"i4uu1u1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu1u1},
	{"i4uu2", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu2},
	{"i4uu4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu4},
	{"i4uu8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu8},
	{"i4uu8u8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu8u8},
	{"i4uuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuu},
	{"i8uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i8uu},
	{"iuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_iuu},
	{"r4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_r4uu},
	{"r8uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_r8uu},
	{"s0u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s0u},
	{"s10u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s10u},
	{"s15u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s15u},
	{"s15ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_s15ui4},
	{"s18uu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_s18uu1},
	{"s19uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_s19uu},
	{"s20uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_s20uu},
	{"s25u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s25u},
	{"s25us25", (Il2CppMethodPointer)__N2M_AdjustorThunk_s25us25},
	{"s25uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_s25uu},
	{"s2u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s2u},
	{"s3u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s3u},
	{"s4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s4u},
	{"s4ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_s4ui4},
	{"s5u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s5u},
	{"s7u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s7u},
	{"s8u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s8u},
	{"s9u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s9u},
	{"u1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1u},
	{"u1ui1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui1},
	{"u1ui2", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui2},
	{"u1ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui4},
	{"u1ui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui4i4},
	{"u1ui8", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui8},
	{"u1ur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ur4},
	{"u1ur8", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ur8},
	{"u1us0", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us0},
	{"u1us1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us1},
	{"u1us10", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us10},
	{"u1us15", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us15},
	{"u1us19", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us19},
	{"u1us1s1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us1s1},
	{"u1us1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us1u},
	{"u1us1ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us1ui4},
	{"u1us20", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us20},
	{"u1us21", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us21},
	{"u1us25", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us25},
	{"u1us26", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us26},
	{"u1us27", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us27},
	{"u1us39", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us39},
	{"u1us4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us4},
	{"u1us40", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us40},
	{"u1us45", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us45},
	{"u1us46", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us46},
	{"u1us48", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us48},
	{"u1us5", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us5},
	{"u1us55", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us55},
	{"u1us56", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us56},
	{"u1us57", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us57},
	{"u1us59", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us59},
	{"u1us5s5", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us5s5},
	{"u1us60", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us60},
	{"u1us61", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us61},
	{"u1us63", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us63},
	{"u1us66", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us66},
	{"u1us67", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us67},
	{"u1us68", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us68},
	{"u1us69", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us69},
	{"u1us7", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us7},
	{"u1us8", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us8},
	{"u1us9", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us9},
	{"u1uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu},
	{"u1uu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu1},
	{"u1uu2", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu2},
	{"u1uu4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu4},
	{"u1uu8", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu8},
	{"u1uu8u8", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu8u8},
	{"u1uuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuu},
	{"u1uuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuu1},
	{"u2u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u2u},
	{"u2uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u2uu},
	{"u4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u4uu},
	{"u8u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u8u},
	{"u8uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u8uu},
	{"uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uu},
	{"uui", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui},
	{"uui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui4},
	{"uus0", (Il2CppMethodPointer)__N2M_AdjustorThunk_uus0},
	{"uuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuu},
	{"uuus0u", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuus0u},
	{"uuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuu},
	{"uuuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuu1},
	{"uuuus0u", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuus0u},
	{"uuuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuuu},
	{"uuuuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuuu1},
	{"uuuuu1u1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuuu1u1u},
	{"uuuuui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuuui4},
	{"vu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vu},
	{"vui", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui},
	{"vui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4},
	{"vui4s15", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4s15},
	{"vui4s4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4s4},
	{"vui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4u},
	{"vui4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4uu},
	{"vui4uuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4uuu},
	{"vus0", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus0},
	{"vus1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus1},
	{"vus10", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus10},
	{"vus15", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus15},
	{"vus1i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus1i4},
	{"vus1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus1u},
	{"vus1ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus1ui4},
	{"vus4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus4},
	{"vus48", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus48},
	{"vus48s146", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus48s146},
	{"vus48s146u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus48s146u},
	{"vus48uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus48uu},
	{"vus5", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus5},
	{"vus7", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus7},
	{"vus8", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus8},
	{"vus9", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus9},
	{"vuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuu},
	{"vuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuu1},
	{"vuu8", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuu8},
	{"vuui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuui4},
	{"vuus0", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuus0},
	{"vuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuu},
	{"vuuu1u1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuu1u1},
	{"vuuus0", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuus0},
	{"vuuuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuuu1},
	{nullptr, nullptr},
};

//!!!}}CODE
